--[[

	Warning:
		powderOS is not secure!
		I take no responsibility for any damage caused by powderOS!

╔══════════════════════════════╗
║           Warning            ║▒
║     Epic ASCII art ahead     ║▒
║ Please use a monospaced font ║▒
╚══════════════════════════════╝▒
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

╔════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                __                  _____   ____                            ║▒ 
║                                               /\ \               /\  __`\/\  _`\                           ║▒
║                  _____     ___   __  __  __   \_\ \     __   _ __\ \ \/\ \ \,\L\_\                         ║▒
║                 /\ '__`\  / __`\/\ \/\ \/\ \  /'_` \  /'__`\/\`'__\ \ \ \ \/_\__ \                         ║▒
║                 \ \ \L\ \/\ \L\ \ \ \_/ \_/ \/\ \L\ \/\  __/\ \ \/ \ \ \_\ \/\ \L\ \                       ║▒
║                  \ \ ,__/\ \____/\ \___x___/'\ \___,_\ \____\\ \_\  \ \_____\ `\____\                      ║▒
║                   \ \ \/  \/___/  \/__//__/   \/__,_ /\/____/ \/_/   \/_____/\/_____/  v4.2.1              ║▒
║                    \ \_\                                                                                   ║▒
║                     \/_/                                                                                   ║▒
║                                                                                        Text by patorjk.com ║▒
╠══Custom App Development════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ Custom apps can be added using seperate scripts.                                                           ║▒
║ An example of a custom app script is shown below.                                                          ║▒
║                                                                                                            ║▒
╠══Custom═App═Example════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ -- Creating Windows / Window Components                                                                    ║▒
║                                                                                                            ║▒
║ myWindow = Window:new(-1, -1, 200, 70) -- This window MUST be global                                       ║▒
║ myLabel = Label:new(36, 10, 128, 16, "This is a test app.")                                                ║▒
║                                                                                                            ║▒
║ -- Scripts                                                                                                 ║▒
║                                                                                                            ║▒
║ function openMyWindow()                                                                                    ║▒
║   if powderOSVersion >= 4.1 then                                                                           ║▒
║     interface.showWindow(myWindow)                                                                         ║▒
║   else                                                                                                     ║▒
║     interface.beginThrowError("This app requires version 4.1 or equivalent!")                              ║▒
║   end                                                                                                      ║▒
║ end                                                                                                        ║▒
║                                                                                                            ║▒
║ -- Register Components                                                                                     ║▒
║                                                                                                            ║▒
║ myWindow:addComponent(myLabel)                                                                             ║▒
║                                                                                                            ║▒
║ -- Register App To powderOS                                                                                ║▒
║                                                                                                            ║▒
║ table.insert(appName, "Test") -- Name of app (displayed on desktop)                                        ║▒
║ table.insert(appFunction, openMyWindow) -- Function to run                                                 ║▒
║ table.insert(appWindow, "myWindow") -- Name of window                                                      ║▒
║ table.insert(appX, 32) -- Size of desktop button                                                           ║▒
║ table.insert(appIcon, "") -- Desktop icon (displayed above app name)                                      ║▒
║                                                                                                            ║▒
╠══Application═Icons═════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║  ║▒
║                                                                                                            ║▒
╠══Website Creation══════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ You only need to have a server that can host plain text.                                                   ║▒
║ There are options that can be set to make the website load faster and                                      ║▒
║ decrease file size.                                                                                        ║▒
║                                                                                                            ║▒
╠══Options═══════════════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ first value - Animation (frame delay or 0)                                                                 ║▒
║                                                                                                            ║▒
╠══Website═Example═══════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ -- First character is mode. (animation is disabled)                                                        ║▒
║                                                                                                            ║▒
║ "0","255|12718","127|11","255|573","127|27","255|559","127|39","255|549","127|47","255|538","127|60"...    ║▒
║                                                                                                            ║▒
╠══Animated═Website═Example══════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ -- First character is mode. (1 animation frame per 5 game frames)                                          ║▒
║                                                                                                            ║▒
║ "5","255|12718","127|11","255|573","127|27","255|559","127|39","255|549","127|47","255|538","127|60"...    ║▒
║                                                                                                            ║▒
╠══Other═════════════════════════════════════════════════════════════════════════════════════════════════════╣▒
║                                                                                                            ║▒
║ ╔═Credits═══════════════════╗                                                                              ║▒
║ ║aaccbb @aaccbb80           ║▒                                                                             ║▒
║ ║The abober of ashongles.   ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║mecha-man @krftdnr         ║▒                                                                             ║▒
║ ║Helped fixed desktop bug.  ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║jacob1 @jacob614           ║▒                                                                             ║▒
║ ║Helped with beginConfirm.  ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║ThatPerson @thatperson3625 ║▒                                                                             ║▒
║ ║Helped with lots of Lua.   ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║Cracker1000  @cracker1000  ║▒                                                                             ║▒
║ ║Helped with gfx drawing.   ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║✨ Sunny ✨ @sunnydamoth  ║▒                                                                             ║▒
║ ║RLE compression algorithm. ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║wsxdrfvyhn @wsxdrfvyhn     ║▒                                                                             ║▒
║ ║Idea generator.            ║▒                                                                             ║▒
║ ╠═══════════════════════════╣▒                                                                             ║▒
║ ║Maticzpl @maticzpl         ║▒                                                                             ║▒
║ ║Helped with lots of Lua.   ║▒                                                                             ║▒
║ ╚═══════════════════════════╝▒                                                                             ║▒
║ ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒                                                                             ║▒
║                                                                                                            ║▒
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════╝▒
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
]]

-- Version Data

powderOSVersion = "4.2.1"
local powderOSBuildReleaseDate = "May 27th, 2024"

--Functions

function str2list(str)
    local a = {}
    for wd in str:gmatch('"([^"]+)"') do
        table.insert(a, wd)
    end
    return a
end

function b2n(value) -- hjpotter92 on StackOverflow
  return value and 1 or 0
end

function rle(arr) -- Generated with ChatGPT 4o
    local encoded = {}
    local n = #arr
    local i = 1
    while i <= n do
        local count = 1
        local value = arr[i]
        while i + count <= n and arr[i + count] == value do
            count = count + 1
        end
        if count > 1 then
            table.insert(encoded, value .. "|" .. count)
        else
            table.insert(encoded, value)
        end
        i = i + count
    end
    return encoded
end

function pea(encoded)  -- Generated with ChatGPT 4o
	local output = ""
    for i, v in ipairs(encoded) do
        output = output.."\"" .. v .. "\""
        if i < #encoded then
            output = output..","
        end
    end
	return output
end

function rld(encoded)  -- Generated with ChatGPT 4o
    local decoded = {}
    for _, v in ipairs(encoded) do
        local value, count = string.match(v, "(%d+)|(%d+)")
        if value and count then
            value = tonumber(value)
            count = tonumber(count)
            for i = 1, count do
                table.insert(decoded, value)
            end
        else
            table.insert(decoded, tonumber(v))
        end
    end
    return decoded
end

function valueExists(array, value)
    for i, v in ipairs(array) do
        if v == value then
            return true
        end
    end
    return false
end

function exists(var)
  for k, _ in pairs(_G) do
    if k == var then
      return true
    end
  end
end

function indexOf(array, value) -- MarredCheese on StackOverflow
    for i, v in ipairs(array) do
        if v == value then
            return i
        end
    end
    return nil
end

function sT()
		sound.playSound(999)
end

function sleep (a) -- Mossarelli on StackOverflow
    local sec = tonumber(os.clock() + a); 
    while (os.clock() < sec) do 
    end 
end

function sn (a)
	local lines = {}
	for s in str:gmatch("[^\r\n]+") do -- sisoft on StackOverflow
		table.insert(lines, s)
	end
	return lines
end

local function startsWithVowel(word) -- Generated with ChatGPT 4o
    local firstChar = string.lower(string.sub(word, 1, 1))
    return firstChar == "a" or firstChar == "e" or firstChar == "i" or firstChar == "o" or firstChar == "u"
end

local function modifyArticle(article, followingWord) -- Generated with ChatGPT 4o
    if article == "an" and not startsWithVowel(followingWord) then
        return "a"
    elseif article == "a" and startsWithVowel(followingWord) then
        return "an"
    else
        return article
    end
end

function checkAndRunFunction(str, array) -- Generated with ChatGPT 4o
    for _, pair in ipairs(array) do
        local key = pair[1]
        local func = pair[2]
        if key == str then
            func()
            return true
        end
    end
    return false
end

--Setup


if pcall(sT) then soundAvaliable = 1 else soundAvaliable = 0 print("You're missing out on sound! Install acbMod to unlock sound features.") end

--local welcwindow = Window:new(-1, -1, 200, 50)

--local welcometext = Label:new(0, currentY, (select(1, welcwindow:size())/1), 16, "Thank you for installing PowderOS!")
--local welcomecloseButton = Button:new(50, select(2, welcwindow:size())-23, 100, 16, "Close")

--welcwindow:addComponent(welcomecloseButton)
--welcwindow:addComponent(welcometext)

if (MANAGER.getsetting("powderOS", "firstLaunch") ~= "no") then
MANAGER.savesetting("powderOS","firstLaunch","no")
MANAGER.savesetting("powderOS","background","0, 128, 128")
--MANAGER.savesetting("powderOS","fsName","readme.txt") -- newfile = �
--MANAGER.savesetting("powderOS","fsData","made you look")
fs.makeDirectory("powderOS")
--MANAGER.savesetting("powderOS","password","")
MANAGER.savesetting("powderOS","startupSound","1")
--interface.showWindow(welcwindow)
interface.beginMessageBox("Thank you!", "Thank you for installing powderOS!", false)
end

local listData = {}
local tmpBG = MANAGER.getsetting("powderOS","background")
local tmpr = 1
local tmpg = 1
local tmpb = 1
local tmpr, tmpg, tmpb = tmpBG:match("([^,]+),([^,]+),([^,]+)")
local bgC = {tmpr, tmpg, tmpb}
local startupSound = MANAGER.getsetting("powderOS","startupSound")
local renderLength = 592
local renderWidth = 376
local encRenderR = {"255|2638","221|2","255|590","221|2","255|590","221|2","255|39","221|9","255|13","221|9","255|14","221|3","255|115","221|10","255|378","221|2","255|37","221|13","255|9","221|11","255|14","221|3","255|24","221|2","255|71","221|2","255|16","221|12","255|376","221|2","255|36","221|5","255|5","221|5","255|7","221|5","255|5","221|2","255|14","221|3","255|23","221|3","255|70","221|3","255|16","221|3","255|5","221|5","255|375","221|2","255|35","221|4","255|9","221|4","255|6","221|3","255|23","221|3","255|23","221|3","255|70","221|3","255|16","221|3","255|7","221|3","255|375","221|2","255|34","221|3","255|12","221|4","255|5","221|3","255|23","221|3","255|23","221|3","255|70","221|3","255|16","221|3","255|7","221|3","255|375","221|2","255|33","221|4","255|13","221|3","255|4","221|3","255|24","221|3","255|23","221|3","255|70","221|3","255|16","221|3","255|7","221|3","255|302","221|2","255|3","221|6","255|11","221|8","255|6","221|2","255|8","221|2","255|7","221|3","255|6","221|7","255|2","221|2","255|8","221|7","255|7","221|2","255|2","221|5","255|2","221|3","255|15","221|3","255|3","221|3","255|24","221|3","255|5","221|2","255|2","221|7","255|4","221|10","255|6","221|7","255|7","221|2","255|2","221|5","255|2","221|2","255|2","221|7","255|10","221|7","255|4","221|10","255|12","221|3","255|7","221|3","255|5","221|2","255|2","221|5","255|5","221|8","255|6","221|2","255|8","221|2","255|7","221|3","255|5","221|7","255|7","221|7","255|7","221|2","255|2","221|5","255|205","221|2","255","221|10","255|8","221|10","255|5","221|3","255|7","221|3","255|6","221|3","255|5","221|9","255","221|2","255|7","221|9","255|6","221|2","255","221|6","255","221|3","255|16","221|3","255|3","221|4","255|23","221|3","255|5","221|2","255","221|9","255|3","221|10","255|5","221|9","255|6","221|2","255","221|6","255|2","221|2","255","221|9","255|8","221|9","255|3","221|10","255|12","221|3","255|7","221|3","255|5","221|2","255","221|6","255|4","221|10","255|5","221|3","255|7","221|3","255|6","221|3","255|3","221|9","255|6","221|9","255|6","221|2","255","221|6","255|205","221|6","255|4","221|4","255|5","221|5","255|4","221|4","255|4","221|3","255|6","221|4","255|6","221|3","255|4","221|4","255|4","221|5","255|6","221|4","255|3","221|4","255|5","221|5","255|5","221|3","255|16","221|3","255|4","221|3","255|23","221|3","255|5","221|5","255|4","221|4","255|5","221|3","255|8","221|4","255|3","221|4","255|5","221|5","255|6","221|5","255|4","221|4","255|6","221|4","255|3","221|4","255|5","221|3","255|16","221|3","255|6","221|4","255|5","221|5","255|6","221|5","255|4","221|4","255|4","221|3","255|6","221|4","255|6","221|3","255|2","221|4","255|4","221|2","255|5","221|4","255|3","221|4","255|5","221|5","255|209","221|4","255|7","221|3","255|5","221|3","255|8","221|3","255|3","221|3","255|6","221|4","255|6","221|2","255|4","221|3","255|7","221|4","255|5","221|3","255|6","221|4","255|4","221|4","255|6","221|3","255|17","221|3","255|3","221|5","255|21","221|3","255|5","221|4","255|6","221|3","255|5","221|3","255|7","221|3","255|6","221|4","255|4","221|4","255|7","221|4","255|6","221|3","255|5","221|3","255|6","221|4","255|4","221|3","255|16","221|3","255|5","221|4","255|6","221|4","255|7","221|3","255|8","221|3","255|3","221|3","255|6","221|4","255|6","221|2","255|3","221|3","255|11","221|3","255|6","221|4","255|4","221|4","255|210","221|3","255|9","221|3","255|3","221|4","255|9","221|3","255|3","221|3","255|5","221|4","255|5","221|3","255|3","221|3","255|9","221|3","255|4","221|3","255|8","221|3","255|4","221|3","255|7","221|3","255|17","221|3","255|4","221|5","255|20","221|3","255|5","221|3","255|8","221|2","255|5","221|3","255|6","221|3","255|8","221|3","255|4","221|3","255|8","221|3","255|8","221|2","255|4","221|3","255|8","221|3","255|4","221|3","255|16","221|11","255|7","221|3","255|7","221|4","255|9","221|3","255|3","221|3","255|5","221|4","255|5","221|3","255|3","221|3","255|10","221|3","255|8","221|3","255|4","221|3","255|211","221|3","255|9","221|3","255|3","221|3","255|10","221|3","255|3","221|3","255|4","221|6","255|4","221|3","255|3","221|3","255|9","221|3","255|4","221|3","255|8","221|3","255|4","221|3","255|7","221|3","255|17","221|3","255|5","221|6","255|18","221|3","255|5","221|3","255|8","221|3","255|4","221|3","255|6","221|3","255|8","221|3","255|4","221|3","255|8","221|3","255|8","221|3","255|3","221|3","255|8","221|3","255|4","221|3","255|16","221|12","255|6","221|3","255|7","221|3","255|10","221|3","255|3","221|3","255|4","221|6","255|4","221|3","255|3","221|3","255|10","221|3","255|8","221|3","255|4","221|3","255|211","221|3","255|9","221|3","255|3","221|3","255|10","221|3","255|3","221|3","255|4","221|6","255|4","221|2","255|4","221|3","255|9","221|3","255|4","221|2","255|10","221|2","255|4","221|3","255|7","221|3","255|17","221|3","255|7","221|6","255|16","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|2","255|10","221|2","255|4","221|3","255|8","221|2","255|9","221|3","255|3","221|2","255|10","221|2","255|4","221|3","255|16","221|3","255|6","221|4","255|5","221|3","255|7","221|3","255|10","221|3","255|3","221|3","255|4","221|6","255|4","221|2","255|4","221|3","255|10","221|2","255|10","221|2","255|4","221|3","255|211","221|2","255|11","221|2","255|3","221|2","255|12","221|2","255|4","221|2","255|4","221|2","255|2","221|2","255|3","221|3","255|4","221|2","255|11","221|2","255|4","221|14","255|4","221|2","255|8","221|3","255|17","221|3","255|9","221|5","255|15","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|14","255|4","221|2","255|9","221|2","255|9","221|3","255|3","221|14","255|4","221|3","255|16","221|3","255|7","221|4","255|4","221|2","255|8","221|2","255|12","221|2","255|4","221|2","255|4","221|2","255|2","221|2","255|3","221|3","255|4","221|5","255|8","221|14","255|4","221|2","255|212","221|2","255|11","221|2","255|2","221|3","255|12","221|2","255|4","221|3","255|2","221|3","255|2","221|3","255|2","221|3","255|3","221|3","255|11","221|2","255|3","221|15","255|4","221|2","255|8","221|3","255|17","221|3","255|10","221|5","255|14","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|5","221|15","255|4","221|2","255|9","221|2","255|9","221|3","255|2","221|15","255|4","221|3","255|16","221|3","255|8","221|3","255|4","221|2","255|7","221|3","255|12","221|2","255|4","221|3","255|2","221|3","255|2","221|3","255|2","221|3","255|5","221|6","255|5","221|15","255|4","221|2","255|212","221|2","255|11","221|2","255|2","221|3","255|12","221|2","255|4","221|3","255|2","221|3","255|2","221|3","255|2","221|3","255|3","221|3","255|11","221|2","255|3","221|3","255|16","221|2","255|8","221|3","255|16","221|3","255|13","221|3","255|14","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|5","221|3","255|16","221|2","255|9","221|2","255|9","221|3","255|2","221|3","255|16","221|3","255|16","221|3","255|8","221|3","255|4","221|2","255|7","221|3","255|12","221|2","255|4","221|3","255|2","221|3","255|2","221|3","255|2","221|3","255|7","221|6","255|3","221|3","255|16","221|2","255|212","221|2","255|10","221|3","255|3","221|2","255|12","221|2","255|4","221|3","255|2","221|2","255|3","221|3","255","221|3","255|4","221|3","255|11","221|2","255|4","221|2","255|16","221|2","255|8","221|3","255|16","221|3","255|14","221|3","255|13","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|2","255|16","221|2","255|9","221|2","255|9","221|3","255|3","221|2","255|16","221|3","255|16","221|3","255|9","221|2","255|4","221|2","255|8","221|2","255|12","221|2","255|4","221|3","255|2","221|2","255|3","221|3","255","221|3","255|10","221|5","255|3","221|2","255|16","221|2","255|212","221|2","255|10","221|3","255|3","221|2","255|11","221|3","255|5","221|3","255","221|2","255|4","221|2","255","221|3","255|5","221|2","255|10","221|3","255|4","221|3","255|15","221|2","255|9","221|3","255|15","221|3","255|14","221|3","255|13","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|3","255|15","221|2","255|9","221|2","255|9","221|3","255|3","221|3","255|15","221|3","255|16","221|3","255|9","221|2","255|4","221|2","255|8","221|2","255|11","221|3","255|5","221|3","255","221|2","255|4","221|2","255","221|3","255|12","221|3","255|3","221|3","255|15","221|2","255|212","221|3","255|9","221|3","255|3","221|3","255|10","221|3","255|5","221|6","255|4","221|6","255|5","221|3","255|9","221|3","255|4","221|3","255|15","221|2","255|9","221|3","255|14","221|3","255|15","221|3","255|13","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|3","255|15","221|2","255|9","221|2","255|9","221|3","255|3","221|3","255|15","221|3","255|16","221|3","255|8","221|3","255|4","221|2","255|8","221|3","255|10","221|3","255|5","221|6","255|4","221|6","255|13","221|3","255|2","221|3","255|15","221|2","255|212","221|3","255|8","221|3","255|4","221|3","255|9","221|4","255|5","221|6","255|4","221|5","255|6","221|3","255|9","221|3","255|4","221|3","255|15","221|2","255|10","221|3","255|12","221|4","255|15","221|3","255|13","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|6","221|3","255|15","221|2","255|9","221|2","255|9","221|3","255|3","221|3","255|15","221|3","255|16","221|3","255|8","221|3","255|4","221|2","255|8","221|3","255|9","221|4","255|5","221|6","255|4","221|5","255|14","221|3","255|2","221|3","255|15","221|2","255|212","221|4","255|6","221|4","255|5","221|3","255|8","221|3","255|7","221|4","255|6","221|4","255|7","221|3","255|7","221|4","255|5","221|3","255|8","221|2","255|4","221|2","255|10","221|4","255|10","221|4","255|15","221|3","255|14","221|3","255|5","221|2","255|9","221|3","255|4","221|3","255|7","221|3","255|8","221|2","255|4","221|2","255|9","221|2","255|9","221|3","255|4","221|3","255|8","221|2","255|4","221|3","255|16","221|3","255|7","221|4","255|4","221|2","255|9","221|3","255|8","221|3","255|7","221|4","255|6","221|4","255|13","221|3","255|4","221|3","255|8","221|2","255|4","221|2","255|212","221|6","255|3","221|4","255|6","221|5","255|4","221|4","255|8","221|4","255|6","221|4","255|7","221|4","255|4","221|6","255|5","221|5","255|4","221|4","255|4","221|2","255|11","221|5","255|6","221|5","255|6","221|4","255|4","221|5","255|14","221|3","255|5","221|2","255|9","221|3","255|5","221|3","255|6","221|5","255|4","221|4","255|4","221|2","255|9","221|2","255|9","221|3","255|4","221|5","255|4","221|4","255|5","221|3","255|15","221|3","255|6","221|4","255|5","221|2","255|9","221|5","255|4","221|4","255|8","221|4","255|6","221|4","255|6","221|3","255|3","221|4","255|4","221|5","255|4","221|4","255|4","221|2","255|212","221|2","255","221|9","255|9","221|10","255|9","221|4","255|6","221|3","255|9","221|10","255","221|2","255|6","221|11","255|5","221|2","255|13","221|13","255|7","221|12","255|15","221|3","255|5","221|2","255|9","221|3","255|5","221|6","255|4","221|11","255|5","221|2","255|9","221|2","255|9","221|3","255|5","221|11","255|6","221|6","255|12","221|12","255|6","221|2","255|11","221|10","255|9","221|4","255|6","221|3","255|7","221|9","255|6","221|11","255|5","221|2","255|212","221|2","255|2","221|7","255|11","221|7","255|11","221|3","255|7","221|3","255|11","221|6","255|3","221|2","255|8","221|7","255|7","221|2","255|15","221|8","255|11","221|9","255|17","221|3","255|5","221|2","255|9","221|3","255|6","221|5","255|6","221|7","255|7","221|2","255|9","221|2","255|9","221|3","255|7","221|7","255|9","221|5","255|12","221|10","255|8","221|2","255|12","221|7","255|11","221|3","255|7","221|3","255|8","221|7","255|9","221|7","255|7","221|2","255|212","221|2","255|590","221|2","255|590","221|2","255|590","221|2","255|590","221|2","255|590","221|2","255|589","241","224","221","255|589","241","224","221","255|47248","221|34","255|553","221|44","255|541","221|58","255|530","221|66","255|521","221|76","255|513","221|82","255|507","221|88","255|500","221|96","255|493","221|102","255|487","221|108","255|482","221|112","255|477","221|118","255|472","221|122","255|467","221|128","255|462","221|132","255|458","221|136","255|454","221|140","255|450","221|144","255|446","221|148","255|442","221|152","255|439","221|154","255|436","221|158","255|432","221|162","255|429","221|164","255|426","221|168","255|422","221|172","255|419","221|174","255|416","221|178","255|413","221|180","255|411","221|182","255|408","221|90","255|6","221|90","255|405","221|89","255|10","221|89","255|402","221|90","255|12","221|90","255|399","221|90","255|14","221|90","255|397","221|90","255|16","221|90","255|394","221|92","255|16","221|92","255|391","221|92","255|18","221|92","255|389","221|93","255|18","221|93","255|387","221|94","255|18","221|94","255|385","221|95","255|18","221|95","255|384","221|95","255|18","221|96","255|383","221|95","255|18","221|97","255|382","221|96","255|16","221|99","255|381","221|96","255|16","221|100","255|380","221|97","255|14","221|102","255|379","221|98","255|12","221|104","255|378","221|99","255|10","221|106","255|377","221|101","255|6","221|109","255|376","221|217","255|375","221|218","255|374","221|219","255|373","221|220","255|372","221|221","255|371","221|222","255|370","221|223","255|369","221|224","255|368","221|224","255|368","221|225","255|367","221|226","255|366","221|102","255|5","221|120","255|365","221|100","255|9","221|119","255|364","221|99","255|11","221|118","255|364","221|98","255|13","221|118","255|363","221|97","255|15","221|118","255|362","221|97","255|15","221|119","255|361","221|96","255|17","221|119","255|360","221|96","255|17","221|119","255|360","221|95","255|19","221|119","255|359","221|95","255|19","221|119","255|359","221|95","255|19","221|120","255|358","221|95","255|19","221|121","255|357","221|95","255|19","221|122","255|356","221|95","255|19","221|122","255|356","221|95","255|19","221|123","255|355","221|95","255|19","221|123","255|355","221|95","255|19","221|124","255|354","221|95","255|19","221|124","255|354","221|95","255|19","221|125","255|353","221|95","255|19","221|15","255|6","221|105","255|352","221|95","255|19","221|13","255|10","221|103","255|352","221|95","255|19","221|12","255|12","221|103","255|351","221|95","255|19","221|11","255|14","221|102","255|351","221|95","255|19","221|10","255|16","221|102","255|350","221|96","255|17","221|11","255|16","221|103","255|349","221|96","255|17","221|10","255|18","221|102","255|349","221|96","255|17","221|10","255|18","221|103","255|348","221|97","255|15","221|11","255|18","221|103","255|348","221|98","255|13","221|12","255|18","221|104","255|347","221|99","255|11","221|13","255|18","221|104","255|347","221|100","255|9","221|14","255|18","221|104","255|347","221|102","255|5","221|17","255|16","221|106","255|346","221|124","255|16","221|106","255|346","221|125","255|14","221|108","255|345","221|126","255|12","221|109","255|345","221|127","255|10","221|111","255|344","221|129","255|6","221|113","255|344","221|248","255|344","221|249","255|343","221|249","255|343","221|250","255|342","221|250","255|342","221|250","255|342","221|64","255|6","221|31","255|7","221|143","255|341","221|62","255|10","221|27","255|11","221|141","255|341","221|61","255|12","221|25","255|13","221|140","255|341","221|60","255|14","221|23","255|15","221|140","255|340","221|59","255|16","221|21","255|17","221|139","255|340","221|59","255|16","221|21","255|17","221|139","255|340","221|58","255|18","221|19","255|19","221|139","255|339","221|58","255|18","221|19","255|19","221|139","255|339","221|58","255|18","221|19","255|19","221|139","255|339","221|58","255|18","221|19","255|19","221|140","255|338","221|58","255|18","221|19","255|19","221|140","255|338","221|59","255|16","221|20","255|19","221|140","255|338","221|59","255|16","221|21","255|17","221|141","255|338","221|60","255|14","221|22","255|17","221|142","255|337","221|61","255|12","221|24","255|15","221|143","255|337","221|62","255|10","221|26","255|13","221|144","255|337","221|64","255|6","221|29","255|11","221|145","255|337","221|101","255|7","221|148","255|336","221|256","255|336","221|256","255|336","221|257","255|335","221|257","255|335","221|257","255|335","221|257","255|335","221|257","255|335","221|257","255|335","221|257","255|335","221|258","255|334","221|100","255|8","221|150","255|334","221|98","255|12","221|148","255|334","221|96","255|16","221|146","255|334","221|95","255|18","221|145","255|334","221|94","255|20","221|145","255|333","221|93","255|22","221|144","255|333","221|92","255|24","221|143","255|333","221|91","255|26","221|142","255|333","221|90","255|28","221|142","255|332","221|89","255|30","221|141","255|332","221|88","255|32","221|40","255|5","221|95","255|332","221|87","255|34","221|37","255|9","221|93","255|332","221|86","255|36","221|34","255|13","221|91","255|332","221|85","255|18","221|5","255|15","221|32","255|15","221|90","255|332","221|84","255|17","221|9","255|14","221|31","255|15","221|90","255|332","221|83","255|16","221|13","255|13","221|29","255|17","221|89","255|332","221|82","255|16","221|15","255|13","221|28","255|17","221|89","255|332","221|81","255|16","221|17","255|13","221|26","255|19","221|88","255|332","221|80","255|16","221|19","255|13","221|25","255|19","221|88","255|332","221|79","255|16","221|21","255|13","221|24","255|19","221|88","255|332","221|78","255|16","221|23","255|13","221|23","255|19","221|88","255|332","221|77","255|16","221|25","255|13","221|22","255|19","221|88","255|332","221|76","255|16","221|27","255|13","221|21","255|19","221|88","255|332","221|75","255|16","221|29","255|13","221|21","255|17","221|89","255|332","221|38","255|7","221|29","255|16","221|31","255|13","221|20","255|17","221|89","255|332","221|36","255|11","221|26","255|16","221|33","255|13","221|20","255|15","221|90","255|332","221|35","255|13","221|24","255|16","221|35","255|13","221|19","255|15","221|90","255|332","221|34","255|15","221|22","255|16","221|17","255|3","221|17","255|13","221|19","255|13","221|91","255|332","221|33","255|17","221|20","255|16","221|17","255|5","221|17","255|13","221|19","255|11","221|92","255|332","221|33","255|17","221|19","255|16","221|17","255|7","221|17","255|13","221|21","255|5","221|95","255|332","221|32","255|19","221|17","255|16","221|17","255|9","221|17","255|13","221|120","255|332","221|32","255|19","221|16","255|16","221|17","255|11","221|17","255|13","221|119","255|332","221|32","255|19","221|15","255|17","221|16","255|13","221|17","255|13","221|118","255|332","221|32","255|19","221|14","255|17","221|16","255|15","221|17","255|13","221|117","255|332","221|32","255|19","221|13","255|18","221|15","255|17","221|17","255|13","221|116","255|332","221|32","255|19","221|12","255|19","221|14","255|19","221|17","255|13","221|115","255|332","221|32","255|19","221|11","255|20","221|13","255|21","221|17","255|13","221|114","255|332","221|33","255|17","221|11","255|22","221|11","255|23","221|17","255|13","221|113","255|332","221|33","255|17","221|10","255|23","221|10","255|25","221|17","255|13","221|112","255|332","221|34","255|15","221|10","255|25","221|8","255|27","221|17","255|13","221|111","255|332","221|35","255|13","221|10","255|28","221|4","255|30","221|17","255|13","221|110","255|332","221|36","255|11","221|10","255|64","221|17","255|13","221|109","255|332","221|38","255|7","221|11","255|66","221|17","255|13","221|107","255|333","221|55","255|68","221|17","255|13","221|106","255|333","221|54","255|70","221|17","255|13","221|105","255|333","221|53","255|72","221|17","255|13","221|104","255|333","221|52","255|16","221|4","255|54","221|17","255|13","221|103","255|333","221|51","255|15","221|8","255|53","221|17","255|13","221|101","255|334","221|50","255|15","221|10","255|53","221|17","255|13","221|100","255|334","221|49","255|16","221|10","255|54","221|17","255|13","221|99","255|334","221|48","255|16","221|12","255|54","221|17","255|13","221|98","255|334","221|47","255|17","221|12","255|55","221|17","255|13","221|97","255|334","221|46","255|18","221|12","255|56","221|17","255|13","221|95","255|335","221|45","255|19","221|12","255|57","221|17","255|13","221|94","255|335","221|44","255|20","221|12","255|58","221|17","255|13","221|93","255|335","221|43","255|22","221|10","255|60","221|17","255|13","221|92","255|335","221|42","255|23","221|10","255|61","221|17","255|13","221|91","255|335","221|41","255|25","221|8","255|63","221|17","255|13","221|90","255|335","221|40","255|28","221|4","255|66","221|17","255|13","221|88","255|336","221|39","255|100","221|17","255|13","221|87","255|336","221|38","255|102","221|17","255|13","221|86","255|336","221|37","255|104","221|17","255|13","221|84","255|337","221|36","255|106","221|17","255|13","221|83","255|337","221|35","255|108","221|17","255|13","221|82","255|337","221|34","255|110","221|17","255|13","221|81","255|337","221|33","255|112","221|17","255|13","221|79","255|338","221|32","255|114","221|17","255|13","221|78","255|338","221|31","255|116","221|17","255|13","221|77","255|338","221|30","255|118","221|17","255|13","221|76","255|338","221|29","255|120","221|17","255|13","221|74","255|339","221|28","255|122","221|17","255|13","221|73","255|339","221|27","255|124","221|17","255|13","221|72","255|339","221|26","255|126","221|17","255|13","221|70","255|340","221|25","255|14","221|5","255|109","221|17","255|13","221|69","255|340","221|24","255|13","221|9","255|108","221|17","255|13","221|68","255|340","221|23","255|14","221|9","255|109","221|17","255|13","221|66","255|341","221|22","255|14","221|11","255|109","221|17","255|13","221|65","255|341","221|21","255|14","221|13","255|109","221|17","255|13","221|64","255|341","221|20","255|15","221|13","255|110","221|17","255|13","221|62","255|342","221|19","255|16","221|13","255|111","221|17","255|13","221|61","255|342","221|18","255|17","221|13","255|112","221|17","255|13","221|60","255|342","221|17","255|18","221|13","255|113","221|17","255|13","221|58","255|343","221|16","255|19","221|13","255|114","221|17","255|13","221|57","255|343","221|15","255|21","221|11","255|116","221|17","255|13","221|56","255|343","221|14","255|23","221|9","255|118","221|17","255|13","221|54","255|344","221|13","255|24","221|9","255|119","221|17","255|13","221|53","255|344","221|12","255|27","221|5","255|122","221|17","255|13","221|51","255|345","221|11","255|156","221|17","255|13","221|50","255|345","221|10","255|158","221|17","255|13","221|48","255|346","221|9","255|160","221|17","255|13","221|47","255|346","221|8","255|162","221|17","255|13","221|45","255|347","221|7","255|164","221|17","255|13","221|44","255|347","221|7","255|165","221|17","255|12","221|44","255|347","221|7","255|166","221|17","255|11","221|43","255|348","221|6","255|168","221|16","255|12","221|42","255|348","221|6","255|169","221|16","255|11","221|41","255|349","221|6","255|170","221|15","255|11","221|41","255|349","221|6","255|171","221|14","255|11","221|40","255|350","221|6","255|172","221|13","255|11","221|39","255|351","221|6","255|173","221|12","255|11","221|39","255|351","221|6","255|174","221|10","255|12","221|38","255|352","221|6","255|175","221|8","255|13","221|38","255|352","221|6","255|176","221|6","255|14","221|37","255|353","221|7","255|194","221|37","255|354","221|7","255|194","221|37","255|354","221|7","255|194","221|36","255|355","221|8","255|192","221|37","255|355","221|9","255|190","221|37","255|356","221|10","255|188","221|38","255|356","221|11","255|186","221|38","255|357","221|13","255|182","221|39","255|358","221|14","255|180","221|39","255|359","221|17","255|174","221|42","255|359","221|232","255|360","221|232","255|360","221|231","255|361","221|230","255|362","221|229","255|363","221|228","255|364","221|228","255|364","221|227","255|365","221|226","255|366","221|225","255|367","221|224","255|368","221|224","255|368","221|223","255|369","221|222","255|370","221|221","255|371","221|220","255|372"}
local encRenderB = {"184|2638","159|2","184|590","159|2","184|590","159|2","184|39","159|9","184|13","159|9","184|14","159|3","184|115","159|10","184|378","159|2","184|37","159|13","184|9","159|11","184|14","159|3","184|24","159|2","184|71","159|2","184|16","159|12","184|376","159|2","184|36","159|5","184|5","159|5","184|7","159|5","184|5","159|2","184|14","159|3","184|23","159|3","184|70","159|3","184|16","159|3","184|5","159|5","184|375","159|2","184|35","159|4","184|9","159|4","184|6","159|3","184|23","159|3","184|23","159|3","184|70","159|3","184|16","159|3","184|7","159|3","184|375","159|2","184|34","159|3","184|12","159|4","184|5","159|3","184|23","159|3","184|23","159|3","184|70","159|3","184|16","159|3","184|7","159|3","184|375","159|2","184|33","159|4","184|13","159|3","184|4","159|3","184|24","159|3","184|23","159|3","184|70","159|3","184|16","159|3","184|7","159|3","184|302","159|2","184|3","159|6","184|11","159|8","184|6","159|2","184|8","159|2","184|7","159|3","184|6","159|7","184|2","159|2","184|8","159|7","184|7","159|2","184|2","159|5","184|2","159|3","184|15","159|3","184|3","159|3","184|24","159|3","184|5","159|2","184|2","159|7","184|4","159|10","184|6","159|7","184|7","159|2","184|2","159|5","184|2","159|2","184|2","159|7","184|10","159|7","184|4","159|10","184|12","159|3","184|7","159|3","184|5","159|2","184|2","159|5","184|5","159|8","184|6","159|2","184|8","159|2","184|7","159|3","184|5","159|7","184|7","159|7","184|7","159|2","184|2","159|5","184|205","159|2","184","159|10","184|8","159|10","184|5","159|3","184|7","159|3","184|6","159|3","184|5","159|9","184","159|2","184|7","159|9","184|6","159|2","184","159|6","184","159|3","184|16","159|3","184|3","159|4","184|23","159|3","184|5","159|2","184","159|9","184|3","159|10","184|5","159|9","184|6","159|2","184","159|6","184|2","159|2","184","159|9","184|8","159|9","184|3","159|10","184|12","159|3","184|7","159|3","184|5","159|2","184","159|6","184|4","159|10","184|5","159|3","184|7","159|3","184|6","159|3","184|3","159|9","184|6","159|9","184|6","159|2","184","159|6","184|205","159|6","184|4","159|4","184|5","159|5","184|4","159|4","184|4","159|3","184|6","159|4","184|6","159|3","184|4","159|4","184|4","159|5","184|6","159|4","184|3","159|4","184|5","159|5","184|5","159|3","184|16","159|3","184|4","159|3","184|23","159|3","184|5","159|5","184|4","159|4","184|5","159|3","184|8","159|4","184|3","159|4","184|5","159|5","184|6","159|5","184|4","159|4","184|6","159|4","184|3","159|4","184|5","159|3","184|16","159|3","184|6","159|4","184|5","159|5","184|6","159|5","184|4","159|4","184|4","159|3","184|6","159|4","184|6","159|3","184|2","159|4","184|4","159|2","184|5","159|4","184|3","159|4","184|5","159|5","184|209","159|4","184|7","159|3","184|5","159|3","184|8","159|3","184|3","159|3","184|6","159|4","184|6","159|2","184|4","159|3","184|7","159|4","184|5","159|3","184|6","159|4","184|4","159|4","184|6","159|3","184|17","159|3","184|3","159|5","184|21","159|3","184|5","159|4","184|6","159|3","184|5","159|3","184|7","159|3","184|6","159|4","184|4","159|4","184|7","159|4","184|6","159|3","184|5","159|3","184|6","159|4","184|4","159|3","184|16","159|3","184|5","159|4","184|6","159|4","184|7","159|3","184|8","159|3","184|3","159|3","184|6","159|4","184|6","159|2","184|3","159|3","184|11","159|3","184|6","159|4","184|4","159|4","184|210","159|3","184|9","159|3","184|3","159|4","184|9","159|3","184|3","159|3","184|5","159|4","184|5","159|3","184|3","159|3","184|9","159|3","184|4","159|3","184|8","159|3","184|4","159|3","184|7","159|3","184|17","159|3","184|4","159|5","184|20","159|3","184|5","159|3","184|8","159|2","184|5","159|3","184|6","159|3","184|8","159|3","184|4","159|3","184|8","159|3","184|8","159|2","184|4","159|3","184|8","159|3","184|4","159|3","184|16","159|11","184|7","159|3","184|7","159|4","184|9","159|3","184|3","159|3","184|5","159|4","184|5","159|3","184|3","159|3","184|10","159|3","184|8","159|3","184|4","159|3","184|211","159|3","184|9","159|3","184|3","159|3","184|10","159|3","184|3","159|3","184|4","159|6","184|4","159|3","184|3","159|3","184|9","159|3","184|4","159|3","184|8","159|3","184|4","159|3","184|7","159|3","184|17","159|3","184|5","159|6","184|18","159|3","184|5","159|3","184|8","159|3","184|4","159|3","184|6","159|3","184|8","159|3","184|4","159|3","184|8","159|3","184|8","159|3","184|3","159|3","184|8","159|3","184|4","159|3","184|16","159|12","184|6","159|3","184|7","159|3","184|10","159|3","184|3","159|3","184|4","159|6","184|4","159|3","184|3","159|3","184|10","159|3","184|8","159|3","184|4","159|3","184|211","159|3","184|9","159|3","184|3","159|3","184|10","159|3","184|3","159|3","184|4","159|6","184|4","159|2","184|4","159|3","184|9","159|3","184|4","159|2","184|10","159|2","184|4","159|3","184|7","159|3","184|17","159|3","184|7","159|6","184|16","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|2","184|10","159|2","184|4","159|3","184|8","159|2","184|9","159|3","184|3","159|2","184|10","159|2","184|4","159|3","184|16","159|3","184|6","159|4","184|5","159|3","184|7","159|3","184|10","159|3","184|3","159|3","184|4","159|6","184|4","159|2","184|4","159|3","184|10","159|2","184|10","159|2","184|4","159|3","184|211","159|2","184|11","159|2","184|3","159|2","184|12","159|2","184|4","159|2","184|4","159|2","184|2","159|2","184|3","159|3","184|4","159|2","184|11","159|2","184|4","159|14","184|4","159|2","184|8","159|3","184|17","159|3","184|9","159|5","184|15","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|14","184|4","159|2","184|9","159|2","184|9","159|3","184|3","159|14","184|4","159|3","184|16","159|3","184|7","159|4","184|4","159|2","184|8","159|2","184|12","159|2","184|4","159|2","184|4","159|2","184|2","159|2","184|3","159|3","184|4","159|5","184|8","159|14","184|4","159|2","184|212","159|2","184|11","159|2","184|2","159|3","184|12","159|2","184|4","159|3","184|2","159|3","184|2","159|3","184|2","159|3","184|3","159|3","184|11","159|2","184|3","159|15","184|4","159|2","184|8","159|3","184|17","159|3","184|10","159|5","184|14","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|5","159|15","184|4","159|2","184|9","159|2","184|9","159|3","184|2","159|15","184|4","159|3","184|16","159|3","184|8","159|3","184|4","159|2","184|7","159|3","184|12","159|2","184|4","159|3","184|2","159|3","184|2","159|3","184|2","159|3","184|5","159|6","184|5","159|15","184|4","159|2","184|212","159|2","184|11","159|2","184|2","159|3","184|12","159|2","184|4","159|3","184|2","159|3","184|2","159|3","184|2","159|3","184|3","159|3","184|11","159|2","184|3","159|3","184|16","159|2","184|8","159|3","184|16","159|3","184|13","159|3","184|14","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|5","159|3","184|16","159|2","184|9","159|2","184|9","159|3","184|2","159|3","184|16","159|3","184|16","159|3","184|8","159|3","184|4","159|2","184|7","159|3","184|12","159|2","184|4","159|3","184|2","159|3","184|2","159|3","184|2","159|3","184|7","159|6","184|3","159|3","184|16","159|2","184|212","159|2","184|10","159|3","184|3","159|2","184|12","159|2","184|4","159|3","184|2","159|2","184|3","159|3","184","159|3","184|4","159|3","184|11","159|2","184|4","159|2","184|16","159|2","184|8","159|3","184|16","159|3","184|14","159|3","184|13","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|2","184|16","159|2","184|9","159|2","184|9","159|3","184|3","159|2","184|16","159|3","184|16","159|3","184|9","159|2","184|4","159|2","184|8","159|2","184|12","159|2","184|4","159|3","184|2","159|2","184|3","159|3","184","159|3","184|10","159|5","184|3","159|2","184|16","159|2","184|212","159|2","184|10","159|3","184|3","159|2","184|11","159|3","184|5","159|3","184","159|2","184|4","159|2","184","159|3","184|5","159|2","184|10","159|3","184|4","159|3","184|15","159|2","184|9","159|3","184|15","159|3","184|14","159|3","184|13","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|3","184|15","159|2","184|9","159|2","184|9","159|3","184|3","159|3","184|15","159|3","184|16","159|3","184|9","159|2","184|4","159|2","184|8","159|2","184|11","159|3","184|5","159|3","184","159|2","184|4","159|2","184","159|3","184|12","159|3","184|3","159|3","184|15","159|2","184|212","159|3","184|9","159|3","184|3","159|3","184|10","159|3","184|5","159|6","184|4","159|6","184|5","159|3","184|9","159|3","184|4","159|3","184|15","159|2","184|9","159|3","184|14","159|3","184|15","159|3","184|13","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|3","184|15","159|2","184|9","159|2","184|9","159|3","184|3","159|3","184|15","159|3","184|16","159|3","184|8","159|3","184|4","159|2","184|8","159|3","184|10","159|3","184|5","159|6","184|4","159|6","184|13","159|3","184|2","159|3","184|15","159|2","184|212","159|3","184|8","159|3","184|4","159|3","184|9","159|4","184|5","159|6","184|4","159|5","184|6","159|3","184|9","159|3","184|4","159|3","184|15","159|2","184|10","159|3","184|12","159|4","184|15","159|3","184|13","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|6","159|3","184|15","159|2","184|9","159|2","184|9","159|3","184|3","159|3","184|15","159|3","184|16","159|3","184|8","159|3","184|4","159|2","184|8","159|3","184|9","159|4","184|5","159|6","184|4","159|5","184|14","159|3","184|2","159|3","184|15","159|2","184|212","159|4","184|6","159|4","184|5","159|3","184|8","159|3","184|7","159|4","184|6","159|4","184|7","159|3","184|7","159|4","184|5","159|3","184|8","159|2","184|4","159|2","184|10","159|4","184|10","159|4","184|15","159|3","184|14","159|3","184|5","159|2","184|9","159|3","184|4","159|3","184|7","159|3","184|8","159|2","184|4","159|2","184|9","159|2","184|9","159|3","184|4","159|3","184|8","159|2","184|4","159|3","184|16","159|3","184|7","159|4","184|4","159|2","184|9","159|3","184|8","159|3","184|7","159|4","184|6","159|4","184|13","159|3","184|4","159|3","184|8","159|2","184|4","159|2","184|212","159|6","184|3","159|4","184|6","159|5","184|4","159|4","184|8","159|4","184|6","159|4","184|7","159|4","184|4","159|6","184|5","159|5","184|4","159|4","184|4","159|2","184|11","159|5","184|6","159|5","184|6","159|4","184|4","159|5","184|14","159|3","184|5","159|2","184|9","159|3","184|5","159|3","184|6","159|5","184|4","159|4","184|4","159|2","184|9","159|2","184|9","159|3","184|4","159|5","184|4","159|4","184|5","159|3","184|15","159|3","184|6","159|4","184|5","159|2","184|9","159|5","184|4","159|4","184|8","159|4","184|6","159|4","184|6","159|3","184|3","159|4","184|4","159|5","184|4","159|4","184|4","159|2","184|212","159|2","184","159|9","184|9","159|10","184|9","159|4","184|6","159|3","184|9","159|10","184","159|2","184|6","159|11","184|5","159|2","184|13","159|13","184|7","159|12","184|15","159|3","184|5","159|2","184|9","159|3","184|5","159|6","184|4","159|11","184|5","159|2","184|9","159|2","184|9","159|3","184|5","159|11","184|6","159|6","184|12","159|12","184|6","159|2","184|11","159|10","184|9","159|4","184|6","159|3","184|7","159|9","184|6","159|11","184|5","159|2","184|212","159|2","184|2","159|7","184|11","159|7","184|11","159|3","184|7","159|3","184|11","159|6","184|3","159|2","184|8","159|7","184|7","159|2","184|15","159|8","184|11","159|9","184|17","159|3","184|5","159|2","184|9","159|3","184|6","159|5","184|6","159|7","184|7","159|2","184|9","159|2","184|9","159|3","184|7","159|7","184|9","159|5","184|12","159|10","184|8","159|2","184|12","159|7","184|11","159|3","184|7","159|3","184|8","159|7","184|9","159|7","184|7","159|2","184|212","159|2","184|590","159|2","184|65","183|5","184|41","183|2","184|477","159|2","184|70","183|3","184|38","183|2","184|477","159|2","184|111","183|2","184|477","159|2","184|67","185","184|3","183|2","182","183","184|36","183|2","184|477","159|2","184|67","185","184|3","183","182","183|2","184|5","183|2","184|29","183|2","184|16","183|2","184|458","173","161","159","184|71","183|4","184","183|2","184|2","183|2","184|10","183|2","184|8","183","184","183|4","184|2","183|3","184|2","183|2","184","183|2","184|4","183|2","184","183|3","182","184|458","173","161","159","184|66","185","184|4","183|3","184","183|2","182|2","184|2","183|2","184|10","183|2","184|4","183|3","182","181|2","182","183|3","184","183|2","184|3","183","182","183|2","182","183","184|3","183|2","184","183|4","184|527","185","184|3","183|2","184|3","183|2","182|2","184|2","183|4","184|6","183","182|2","183","184|5","183|2","182|3","183","184","183","182","184","183|2","184","183|3","182","183|2","182","183|2","184|2","183|4","184","183|2","184|527","185","183|2","184","183|2","184|3","183|2","184|5","183|3","184","183","182|2","184|2","183","182|2","183","184|7","183","182","184|4","182","184","183|2","184","183|2","184|5","183|3","184","183","184|2","183","184|530","183|4","184|4","183|3","184|7","183|3","182","183","184|4","183","184|3","183","182|2","183","182","183|2","184|4","183","182|2","183","184|4","183|7","184","183|3","184|532","183|4","184|13","183|2","184|2","183|2","184|4","183|2","184","183|4","182","183","184|6","183","182","183|2","184","183|9","184","183|3","184|531","185","184|8","183|2","184|5","183","184|2","183","184|3","183|2","182","184","183|3","184","182|2","184","183|3","184|6","183|4","184|2","183|8","184","183|3","184|541","183","184|5","183|2","184|6","183","182","183|3","184|2","183|2","184","183|3","184|7","183|2","184|12","183|3","184|547","183","184|4","183","184|6","183","184|2","183","184|2","183","184|7","183","184","183","184|2","183|2","184|9","183","184|542","183","184|6","183|2","184|3","183|2","184|21","183","184|13","183","184|550","183","184|5","183|2","184|4","185","183","184|4","183|2","184|7","183","184|2","183","184|6","183|2","184|2","183","184|544","185","184|11","183","184|6","183","184|6","183|3","184","183|2","184","183","184|3","183|2","184","183|4","184|3","183","184|545","183","184|27","183","184|2","183","184|6","183","184|40619","159|34","184|553","159|44","184|541","159|58","184|530","159|66","184|521","159|76","184|513","159|82","184|507","159|88","184|500","159|96","184|493","159|102","184|487","159|108","184|482","159|112","184|477","159|118","184|472","159|122","184|467","159|128","184|462","159|132","184|458","159|136","184|454","159|140","184|450","159|144","184|446","159|148","184|442","159|152","184|439","159|154","184|436","159|158","184|432","159|162","184|429","159|164","184|426","159|168","184|422","159|172","184|419","159|174","184|416","159|178","184|413","159|180","184|411","159|182","184|408","159|90","184|6","159|90","184|405","159|89","184|10","159|89","184|402","159|90","184|12","159|90","184|399","159|90","184|14","159|90","184|397","159|90","184|16","159|90","184|394","159|92","184|16","159|92","184|391","159|92","184|18","159|92","184|389","159|93","184|18","159|93","184|387","159|94","184|18","159|94","184|385","159|95","184|18","159|95","184|384","159|95","184|18","159|96","184|383","159|95","184|18","159|97","184|382","159|96","184|16","159|99","184|381","159|96","184|16","159|100","184|380","159|97","184|14","159|102","184|379","159|98","184|12","159|104","184|378","159|99","184|10","159|106","184|377","159|101","184|6","159|109","184|376","159|217","184|375","159|218","184|374","159|219","184|373","159|220","184|372","159|221","184|371","159|222","184|370","159|223","184|369","159|224","184|368","159|224","184|368","159|225","184|367","159|226","184|366","159|102","184|5","159|120","184|365","159|100","184|9","159|119","184|364","159|99","184|11","159|118","184|364","159|98","184|13","159|118","184|363","159|97","184|15","159|118","184|362","159|97","184|15","159|119","184|361","159|96","184|17","159|119","184|360","159|96","184|17","159|119","184|360","159|95","184|19","159|119","184|359","159|95","184|19","159|119","184|359","159|95","184|19","159|120","184|358","159|95","184|19","159|121","184|357","159|95","184|19","159|122","184|356","159|95","184|19","159|122","184|356","159|95","184|19","159|123","184|355","159|95","184|19","159|123","184|355","159|95","184|19","159|124","184|354","159|95","184|19","159|124","184|354","159|95","184|19","159|125","184|353","159|95","184|19","159|15","184|6","159|105","184|352","159|95","184|19","159|13","184|10","159|103","184|352","159|95","184|19","159|12","184|12","159|103","184|351","159|95","184|19","159|11","184|14","159|102","184|351","159|95","184|19","159|10","184|16","159|102","184|350","159|96","184|17","159|11","184|16","159|103","184|349","159|96","184|17","159|10","184|18","159|102","184|349","159|96","184|17","159|10","184|18","159|103","184|348","159|97","184|15","159|11","184|18","159|103","184|348","159|98","184|13","159|12","184|18","159|104","184|347","159|99","184|11","159|13","184|18","159|104","184|347","159|100","184|9","159|14","184|18","159|104","184|347","159|102","184|5","159|17","184|16","159|106","184|346","159|124","184|16","159|106","184|346","159|125","184|14","159|108","184|345","159|126","184|12","159|109","184|345","159|127","184|10","159|111","184|344","159|129","184|6","159|113","184|344","159|248","184|344","159|249","184|343","159|249","184|343","159|250","184|342","159|250","184|342","159|250","184|342","159|64","184|6","159|31","184|7","159|143","184|341","159|62","184|10","159|27","184|11","159|141","184|341","159|61","184|12","159|25","184|13","159|140","184|341","159|60","184|14","159|23","184|15","159|140","184|340","159|59","184|16","159|21","184|17","159|139","184|340","159|59","184|16","159|21","184|17","159|139","184|340","159|58","184|18","159|19","184|19","159|139","184|339","159|58","184|18","159|19","184|19","159|139","184|339","159|58","184|18","159|19","184|19","159|139","184|339","159|58","184|18","159|19","184|19","159|140","184|338","159|58","184|18","159|19","184|19","159|140","184|338","159|59","184|16","159|20","184|19","159|140","184|338","159|59","184|16","159|21","184|17","159|141","184|338","159|60","184|14","159|22","184|17","159|142","184|337","159|61","184|12","159|24","184|15","159|143","184|337","159|62","184|10","159|26","184|13","159|144","184|337","159|64","184|6","159|29","184|11","159|145","184|337","159|101","184|7","159|148","184|336","159|256","184|336","159|256","184|336","159|257","184|335","159|257","184|335","159|257","184|335","159|257","184|335","159|257","184|335","159|257","184|335","159|257","184|335","159|258","184|334","159|100","184|8","159|150","184|334","159|98","184|12","159|148","184|334","159|96","184|16","159|146","184|334","159|95","184|18","159|145","184|334","159|94","184|20","159|145","184|333","159|93","184|22","159|144","184|333","159|92","184|24","159|143","184|333","159|91","184|26","159|142","184|333","159|90","184|28","159|142","184|332","159|89","184|30","159|141","184|332","159|88","184|32","159|40","184|5","159|95","184|332","159|87","184|34","159|37","184|9","159|93","184|332","159|86","184|36","159|34","184|13","159|91","184|332","159|85","184|18","159|5","184|15","159|32","184|15","159|90","184|332","159|84","184|17","159|9","184|14","159|31","184|15","159|90","184|332","159|83","184|16","159|13","184|13","159|29","184|17","159|89","184|332","159|82","184|16","159|15","184|13","159|28","184|17","159|89","184|332","159|81","184|16","159|17","184|13","159|26","184|19","159|88","184|332","159|80","184|16","159|19","184|13","159|25","184|19","159|88","184|332","159|79","184|16","159|21","184|13","159|24","184|19","159|88","184|332","159|78","184|16","159|23","184|13","159|23","184|19","159|88","184|332","159|77","184|16","159|25","184|13","159|22","184|19","159|88","184|332","159|76","184|16","159|27","184|13","159|21","184|19","159|88","184|332","159|75","184|16","159|29","184|13","159|21","184|17","159|89","184|332","159|38","184|7","159|29","184|16","159|31","184|13","159|20","184|17","159|89","184|332","159|36","184|11","159|26","184|16","159|33","184|13","159|20","184|15","159|90","184|332","159|35","184|13","159|24","184|16","159|35","184|13","159|19","184|15","159|90","184|332","159|34","184|15","159|22","184|16","159|17","184|3","159|17","184|13","159|19","184|13","159|91","184|332","159|33","184|17","159|20","184|16","159|17","184|5","159|17","184|13","159|19","184|11","159|92","184|332","159|33","184|17","159|19","184|16","159|17","184|7","159|17","184|13","159|21","184|5","159|95","184|332","159|32","184|19","159|17","184|16","159|17","184|9","159|17","184|13","159|120","184|332","159|32","184|19","159|16","184|16","159|17","184|11","159|17","184|13","159|119","184|332","159|32","184|19","159|15","184|17","159|16","184|13","159|17","184|13","159|118","184|332","159|32","184|19","159|14","184|17","159|16","184|15","159|17","184|13","159|117","184|332","159|32","184|19","159|13","184|18","159|15","184|17","159|17","184|13","159|116","184|332","159|32","184|19","159|12","184|19","159|14","184|19","159|17","184|13","159|115","184|332","159|32","184|19","159|11","184|20","159|13","184|21","159|17","184|13","159|114","184|332","159|33","184|17","159|11","184|22","159|11","184|23","159|17","184|13","159|113","184|332","159|33","184|17","159|10","184|23","159|10","184|25","159|17","184|13","159|112","184|332","159|34","184|15","159|10","184|25","159|8","184|27","159|17","184|13","159|111","184|332","159|35","184|13","159|10","184|28","159|4","184|30","159|17","184|13","159|110","184|332","159|36","184|11","159|10","184|64","159|17","184|13","159|109","184|332","159|38","184|7","159|11","184|66","159|17","184|13","159|107","184|333","159|55","184|68","159|17","184|13","159|106","184|333","159|54","184|70","159|17","184|13","159|105","184|333","159|53","184|72","159|17","184|13","159|104","184|333","159|52","184|16","159|4","184|54","159|17","184|13","159|103","184|333","159|51","184|15","159|8","184|53","159|17","184|13","159|101","184|334","159|50","184|15","159|10","184|53","159|17","184|13","159|100","184|334","159|49","184|16","159|10","184|54","159|17","184|13","159|99","184|334","159|48","184|16","159|12","184|54","159|17","184|13","159|98","184|334","159|47","184|17","159|12","184|55","159|17","184|13","159|97","184|334","159|46","184|18","159|12","184|56","159|17","184|13","159|95","184|335","159|45","184|19","159|12","184|57","159|17","184|13","159|94","184|335","159|44","184|20","159|12","184|58","159|17","184|13","159|93","184|335","159|43","184|22","159|10","184|60","159|17","184|13","159|92","184|335","159|42","184|23","159|10","184|61","159|17","184|13","159|91","184|335","159|41","184|25","159|8","184|63","159|17","184|13","159|90","184|335","159|40","184|28","159|4","184|66","159|17","184|13","159|88","184|336","159|39","184|100","159|17","184|13","159|87","184|336","159|38","184|102","159|17","184|13","159|86","184|336","159|37","184|104","159|17","184|13","159|84","184|337","159|36","184|106","159|17","184|13","159|83","184|337","159|35","184|108","159|17","184|13","159|82","184|337","159|34","184|110","159|17","184|13","159|81","184|337","159|33","184|112","159|17","184|13","159|79","184|338","159|32","184|114","159|17","184|13","159|78","184|338","159|31","184|116","159|17","184|13","159|77","184|338","159|30","184|118","159|17","184|13","159|76","184|338","159|29","184|120","159|17","184|13","159|74","184|339","159|28","184|122","159|17","184|13","159|73","184|339","159|27","184|124","159|17","184|13","159|72","184|339","159|26","184|126","159|17","184|13","159|70","184|340","159|25","184|14","159|5","184|109","159|17","184|13","159|69","184|340","159|24","184|13","159|9","184|108","159|17","184|13","159|68","184|340","159|23","184|14","159|9","184|109","159|17","184|13","159|66","184|341","159|22","184|14","159|11","184|109","159|17","184|13","159|65","184|341","159|21","184|14","159|13","184|109","159|17","184|13","159|64","184|341","159|20","184|15","159|13","184|110","159|17","184|13","159|62","184|342","159|19","184|16","159|13","184|111","159|17","184|13","159|61","184|342","159|18","184|17","159|13","184|112","159|17","184|13","159|60","184|342","159|17","184|18","159|13","184|113","159|17","184|13","159|58","184|343","159|16","184|19","159|13","184|114","159|17","184|13","159|57","184|343","159|15","184|21","159|11","184|116","159|17","184|13","159|56","184|343","159|14","184|23","159|9","184|118","159|17","184|13","159|54","184|344","159|13","184|24","159|9","184|119","159|17","184|13","159|53","184|344","159|12","184|27","159|5","184|122","159|17","184|13","159|51","184|345","159|11","184|156","159|17","184|13","159|50","184|345","159|10","184|158","159|17","184|13","159|48","184|346","159|9","184|160","159|17","184|13","159|47","184|346","159|8","184|162","159|17","184|13","159|45","184|347","159|7","184|164","159|17","184|13","159|44","184|347","159|7","184|165","159|17","184|12","159|44","184|347","159|7","184|166","159|17","184|11","159|43","184|348","159|6","184|168","159|16","184|12","159|42","184|348","159|6","184|169","159|16","184|11","159|41","184|349","159|6","184|170","159|15","184|11","159|41","184|349","159|6","184|171","159|14","184|11","159|40","184|350","159|6","184|172","159|13","184|11","159|39","184|351","159|6","184|173","159|12","184|11","159|39","184|351","159|6","184|174","159|10","184|12","159|38","184|352","159|6","184|175","159|8","184|13","159|38","184|352","159|6","184|176","159|6","184|14","159|37","184|353","159|7","184|194","159|37","184|354","159|7","184|194","159|37","184|354","159|7","184|194","159|36","184|355","159|8","184|192","159|37","184|355","159|9","184|190","159|37","184|356","159|10","184|188","159|38","184|356","159|11","184|186","159|38","184|357","159|13","184|182","159|39","184|358","159|14","184|180","159|39","184|359","159|17","184|174","159|42","184|359","159|232","184|360","159|232","184|360","159|231","184|361","159|230","184|362","159|229","184|363","159|228","184|364","159|228","184|364","159|227","184|365","159|226","184|366","159|225","184|367","159|224","184|368","159|224","184|368","159|223","184|369","159|222","184|370","159|221","184|371","159|220","184|372"}
local renderR = rld(encRenderR)
local renderG = renderR
local renderB = rld(encRenderB)
local paintRender = rld({"255|222592"})
local colorAmount = 4
local scrollAmount = 0
local pendingSaveData = ""

mainApp = Window:new(-1, -1, 600, 400) 
cfgApp = Window:new(-1, -1, 600, 400) 
textApp = Window:new(-1, -1, 600, 400) 
webApp = Window:new(-1, -1, 600, 400) 
explorerApp = Window:new(-1, -1, 600, 400) 
musicApp = Window:new(-1, -1, 600, 400) 
composerApp = Window:new(-1, -1,300, 200) 
adventureGame = Window:new(-1, -1,600, 400) 
terminalApp = Window:new(-1, -1,600, 400) 
paintApp = Window:new(-1, -1,600, 400) 
battleApp = Window:new(-1, -1,600, 400) 

function openTextApp()
	interface.showWindow(textApp)
	
end	
function openMusicApp()
	interface.showWindow(musicApp)
end

function openBattleApp()
	interface.beginMessageBox("Not implemented", "Battleship is still in development. Coming in 4.3!", false)
	--interface.showWindow(battleApp)
end	

explorerText = Textbox:new(0, 15, 600, 385, "")
explorerText:readonly(true)

debugLabel = Label:new(0, 0, 100, 15, "debug")
--webApp:addComponent(debugLabel)

--local listData = {}
local R = {}
local G = {}
local B = {}
local animation = 0
local colorAmount = 1
local colorAmountCalc = 255
webSearch = Textbox:new(0, 0, 570, 16, "https://raw.githubusercontent.com/AACCBB80/powderOSWebsites/main/powderOS.tpt", "Type URL in here!")
local webGo = Button:new(569, 0, 16, 16, "")
webScrollBar = Slider:new(0, 396, 600, 7, 1)
webScrollBar:onValueChanged(function(a, b) scrollAmount = b end)

webGo:action(
	function(sender)
		local url = webSearch:text()
		if not url:find("^file:") then
			fetch = http.get(webSearch:text())
			while fetch:status() == "running" do
			end
			data, tmp = fetch:finish()
			data1 = data
			if (tmp ~= 200) then
				s(3)
				interface.beginThrowError("Cannot load webpage! Error code "..tmp.."!")
			else
				s(4)
				data = string.gsub(data, "[^,%d\"|]", "")
				listData = str2list(data)
				R = rld(listData)
				animation = table.remove(R, 1)
				renderR = R
				renderG = R
				renderB = R
				webScrollBar:steps((#R/592)-376)
				webScrollBar:value(0)
				scrollAmount = 0
			end
		else
			data = loadFile(url:sub(6))
			data1 = data
			data = string.gsub(data, "[^,%d\"|]", "")
			listData = str2list(data)
			animation = table.remove(R, 1)
			R = rld(listData)
			renderR = R
			renderG = R
			renderB = R
			webScrollBar:steps((#R/592)-376)
			webScrollBar:value(0)
			scrollAmount = 0
		end
	end
)
webApp:onMouseWheel(function(x, y, d)
	if animation == 0 then
		scrollAmount = math.min((#R/592)-376, math.max(0, scrollAmount + -15*d))
		webScrollBar:value(scrollAmount)
	end
end)
local scrollTimer = 0
webApp:onTick(function()
	if animation == 1 then
		scrollTimer = scrollTimer +1

		if scrollTimer >= 3 then
			scrollTimer = 0
			scrollAmount = scrollAmount + 376
		end
		if scrollAmount >= (#R/592) then
			scrollAmount = 0
		end
	end
end)
webApp:onKeyPress(function(key, scan, rep, shift, alt, ctrl)
	if (tonumber(key) == 115 and alt) then
		pendingSaveData = data1
		interface.beginInput("Download file", "What would you like to name your file?", "", "fileName.txt", saveFile)
	end
end)
function openExplorerApp(t)
	if not(t) then
		interface.showWindow(explorerApp)
	end
	--save = loadstring('fileNameList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsName"), "�", "\",\"")..'"}')
	--save()
	explorerText:text("")
	fileNameList = fs.list("./powderOS")
	if #fileNameList == 0 then
		explorerText:text("No files found.")
	else
		for i=1,#fileNameList do
			explorerText:text(explorerText:text()..fileNameList[i].."\n")
		end
	end
end

function s(s, v)
	if soundAvaliable then
		if sound ~= nil then
			if s == "stop" then
				sound.stopSounds()
			elseif s ~= nil then
				sound.playSound(s, v)
			end
		end
	end
end

function openWebApp()
	interface.showWindow(webApp)
end

function openTerminalApp()
	interface.showWindow(terminalApp)
end

function openPaintApp()
	interface.showWindow(paintApp)
end

function cmd()
	openTerminalApp()
end

function openAdventureGame()
	interface.beginMessageBox("Warning", "This game contains horror and psychological suspense intended for mature audiences. Viewer discretion is advised. If sensitive to violence, supernatural themes, or psychological horror, please be aware. Play in a comfortable environment and take breaks as needed. By choosing to engage with this content, you acknowledge and accept full responsibility for your well-being.", false, function() interface.beginMessageBox("Sound", "For a more immersive experience, please play this game with acbMod.", false, function() interface.showWindow(adventureGame) end) end)
	
end

function openCfgApp(t)
	s(4)
	if not(t) then
		interface.beginInput("Settings", "What startup sound do you prefer? (1 or 2?)", "", "1", function(a) MANAGER.savesetting("powderOS","startupSound",a) openCfgApp(1) end)
	elseif t == 1 then
		interface.beginInput("Settings", "What color do you want your background to be? (format as r, g, b)", "", "0,128,128", function(a) MANAGER.savesetting("powderOS","background",a) openCfgApp(3) end)
	elseif t == 2 then
		interface.beginInput("Settings", "What do you want your password to be? (leave blank for none)", "", "Password", function(a) MANAGER.savesetting("powderOS","password",a) openCfgApp(3) end)
	elseif t == 3 then
		interface.beginMessageBox("Settings", "Restart TPT to apply settings.")
	end
	--interface.showWindow(cfgApp)
end

appName = {"File Manager","Text Editor","Web Browser","Sequence Player","Adventure Game","Paint","Battleship","Terminal","Settings"}
appFunction = {openExplorerApp,openTextApp,openWebApp,openMusicApp,openAdventureGame,openPaintApp,openBattleApp,openTerminalApp,openCfgApp}
appWindow = {"explorerApp","textApp","webApp","cfgApp","musicApp","paintApp","battleApp","terminalApp","adventureGame"}
appX = {74,65,70,88,86,40,62,50,50}
appIcon = {"\x0F\xFF\xFD\x4F","","\x0F\x76\x8c\xFF","\x0F\xFF\xDD\x33","\x0F\x66\xFF\x66","\x0F\xbd\x4a\xff","\x0f\x57\x97\xff","\x0F\x44\x44\xee","\x0F\x76\x8c\xc8"}

--welcomecloseButton:action(function() interface.closeWindow(welcwindow) end)

--[[local function keypressed(key, scan, rep, shift, ctrl, alt)
		if tonumber(key) == 27 then
			exitAllApps()
		end
end
event.register(event.keypress, keypressed)]]

-- bgcolor = hex2rgb(MANAGER.getsetting("powderOS","background")) -- Coming Soon!


-- Window Components / Actions

local timeLabel = Label:new(485, 384, 120, 16, "PLACEHOLDER")

textBoxApp = Textbox:new(0, 15, 600, 385, "")

--local backgroundPattern = Label:new(0, 1, 600, 385, "\x0F\xFF\xFD\x4F"..string.rep("\n", 32))
--backgroundPattern:readonly(true)

local textAppNew = Button:new(0, 0, 17, 16, "")
textAppNew:action(
	function(sender)
		s(4)
		interface.beginConfirm('New file', "Are you sure you want to create a new file? This will erase your previous file if unsaved.", 'Confirm', function(a) s(10) if a then textBoxApp:text("") end end)
	end
)
local textAppSave = Button:new(16, 0, 17, 16, "")
textAppSave:action(
	function(sender)
		pendingSaveData = textBoxApp:text()
		s(4)
		interface.beginInput("Save file", "What would you like to name your file?", "", "fileName.txt", saveFile)
	end
)
local a2 = ""
function saveFile(a)
	if a then
		--if string.find(MANAGER.getsetting("powderOS", "fsName"), a) then
		if fs.exists("./powderOS/"..a) then
			s(4)
			a2 = a
			interface.beginConfirm('Override file', "Are you sure you want to override this file?", 'Confirm', function(a) if a then local file = io.open("./powderOS/"..a2, "w") file:write(pendingSaveData) file:close() end end)
			--interface.beginThrowError("'"..a.."' already exists!")
			--s(3)
		else
			--MANAGER.savesetting("powderOS","fsName",MANAGER.getsetting("powderOS", "fsName").."�"..a)
			--MANAGER.savesetting("powderOS","fsData",MANAGER.getsetting("powderOS", "fsData").."�"..textBoxApp:text())
			local file = io.open("./powderOS/"..a, "w")
			file:write(pendingSaveData)
			file:close()
		end
	end
end

local textAppLoad = Button:new(32, 0, 17, 16, "")
textAppLoad:action(
	function(sender)
		s(4)
		interface.beginInput("Open file", "What file would you like to open?", "", "fileName.txt", function(a) textBoxApp:text(loadFile(a)) end)
	end
)
list = {}
i=1
musicPlay = ""
musicPlaying = 0
musicFile = ""
musicAppLoad = Button:new(0, 0, 17, 16, "")
local musicAppDuration = Slider:new(150, 200, 300, 20, 1)
musicAppLoad:action(
	function(sender)
		s(4)
		interface.beginInput("Open file", "What file would you like to open?", "", "fileName.seq", function(a) list = {} i=1 musicFile = a musicPlay = loadFile(a) if musicPlay then genMusic = loadstring('list = {'..musicPlay..'}') genMusic() musicPlaying = 1 musicAppDuration:steps(#list) else musicPlaying = 0 end end)
	end
)
local musicAppPlaying = Label:new(15, 0, 568, 16, "Playing nothing...")
local musicAppTime = Label:new(262, 180, 75, 16, "?/?")
local composerAppView = Textbox:new(25, 20, 250, 86, "")
local composerAppNote = Textbox:new(118,  110, 64, 16, "0") local composerAppSelectedNote = 11 local composerAppData = ""
local composerAppAdd = Button:new(130, 130, 40, 16, "Add") composerAppAdd:action(function(sender) composerAppData = composerAppData..composerAppNote:text().."," composerAppView:text(composerAppData:gsub(string.rep(".", 42),'%1\n'):gsub('\n$','')) end)
local composerAppUp = Button:new(173, 130, 40, 16, "") composerAppUp:action(function(sender) composerAppSelectedNote = math.min(composerAppSelectedNote + 1, 63) composerAppNote:text(composerAppSelectedNote-11) s(composerAppSelectedNote) end)
local composerAppDown = Button:new(87, 130, 40, 16, "") composerAppDown:action(function(sender) composerAppSelectedNote = math.max(composerAppSelectedNote - 1, 11) composerAppNote:text(composerAppSelectedNote-11) s(composerAppSelectedNote) end)
local composerAppDur = Button:new(130, 150, 40, 16, "Rest") composerAppDur:action(function(sender) s(4) interface.beginInput("Set duration", "How long would you like this rest to be? (in ms)", "", "100", function(a) composerAppData = composerAppData..composerAppNote:text("-"..a).."," end)end)
local composerAppSave = Button:new(125, 175, 50, 16, "Save") composerAppSave:action(function(sender) composerAppData = composerAppData.."-0" pendingSaveData = composerAppData s(4) interface.beginInput("Save file", "What would you like to name your file?", ".seq", "fileName.seq", saveFile) end)
local composerAppExit = Button:new(284, 0, 16, 16, "\x0F\xFF\x00\x00") composerAppExit:action( function(sender) interface.closeWindow(composerApp) end )
local composerAppDel = Button:new(0, 0, 16, 16, "") composerAppDel:action( function(sender) interface.beginConfirm('New sequence', "Are you sure you want to create a new file? This will erase your previous sequence if unsaved.", 'Confirm', function(a) s(10) if a then composerAppData = "" composerAppView:text("") end end) end )
composerAppNote:readonly(true)
--composerAppView:readonly(true)
composerAppView:onTextChanged(
	function(sender)
		composerAppData = composerAppView:text()
	end
)
local musicAppComposer = Button:new(262, 250, 75, 16, "Composer")
musicAppComposer:action(
	function(sender)
		interface.showWindow(composerApp)
	end
)
--temporaryC = ""
--color = ""
musicApp:onTick(
	function()
		if musicPlaying then
			if i > #list then
				musicPlaying = 0
				musicAppPlaying:text("Playing nothing...")
				musicAppTime:text("?/?")
				musicAppDuration:value(0)
			else
				if string.sub(list[i], 1, 1) == "-" then
					sleep(math.abs(list[i]/1000)*1.5)
				else
					s(list[i]+11)
					--color = "\\x0F\\x"..string.format("%x", math.random(0, 255)).."\\x"..string.format("%x", math.random(0, 255)).."\\x"..string.format("%x", math.random(0, 255))
					--loadstring('temporaryC = "'..color..'Playing '..musicFile..'"')()
					musicAppPlaying:text('Playing '..musicFile)
				end
				musicAppDuration:value(i)
				musicAppTime:text(i.."/"..#list)
				--color = "\\x0F\\x"..string.format("%x", math.random(0, 255)).."\\x"..string.format("%x", math.random(0, 255)).."\\x"..string.format("%x", math.random(0, 255))
				--loadstring('temporaryC = "'..color..i..'/'..#list..'"')()
				--musicAppTime:text(temporaryC)
				i=i+1
			end
		else
			musicAppPlaying:text("Playing nothing...")
		end
	end	
)

local terminalInput = Textbox:new(0, 385, 585, 15, "")
local terminalText = Textbox:new(0, 15, 600, 370, "")
local terminalClear = Button:new(0, 0, 40, 16, "Clear")terminalClear:action( function() terminalText:text("") end)
local terminalSubmit = Button:new(584, 385, 16, 15, "")

local luaMode = 0
function lsFunc()
	local fileNameList = fs.list("./powderOS")
	if #fileNameList == 0 then
		terminalOutput("No files found.")
	else
		for i=1,#fileNameList do
			terminalOutput(fileNameList[i], 0)
		end
		terminalOutput("", 1)
	end
end

local commandArray = {
	{"ls", lsFunc},
	{"lua", function() terminalOutput("Use 'exit' to exit Lua mode.") luaMode = 1 end},
	{"cls", function() terminalText:text("") end},
	{"about", function() interface.beginMessageBox("About", "powderOS v"..powderOSVersion.."\n\nv"..powderOSVersion.." Completed "..powderOSBuildReleaseDate..".\n\n'Licensed' to:\n"..tpt.get_name().."\n\nCreated by aaccbb, April 7th, 2024", 1) end},
	{"help", function() terminalOutput("Commands: ls, lua, cls, about, help") end}
}
function terminalOutput(a, b)
	local lb = "\n\n"
	if b == nil then
		lb = "\n\n"
	else
		lb = string.rep("\n", b+1)
	end
	terminalText:text(terminalText:text()..a..lb)
end
terminalSubmit:action(function()
	local executedCommand = terminalInput:text()
	terminalOutput(executedCommand, 1)
	if luaMode == 1 then
		if executedCommand == "exit" then
			luaMode = 0
			terminalOutput("Exited Lua mode.")
		else
			func, err = loadstring(executedCommand)
			success, result = pcall(func)
			if success then
				terminalOutput("Ok")
			else
				terminalOutput("Syntax error")
			end
		end
	else
		if not checkAndRunFunction(executedCommand, commandArray) then
			terminalOutput("No such command!")
		end
	end
	terminalInput:text("")
end)

terminalText:readonly(true)

local defaultAdventureState = {
    currentRoom = "start",
    inventory = {},
}
local defaultAdventureRooms = {
	start = {
		description = "Use 'help' for help.\nUse 'inventory' or 'inv' to search your inventory.\n\nWaking from a prolonged stasis, memories echo within your mind.\nA flickering holographic display reveals the remnants of an advanced asylum.\nVoices echoing throughout the building tempt you to delve deeper into its shadowed corridors.\nWill you unravel its secrets and escape, or become trapped in its grip forever?",
		stand = "hallway",
		help = "stand - stand up"
	},
	hallway = {
		description = "You find yourself in a corridor with doors lining its sides.\nStrange echos and noises fill the air, creating an unsettling atmosphere throughout the building.\nEach door bears a label:\nOFFICE, STORAGE, OPERATING ROOM, PADDED ROOM, BASEMENT, and EXIT,\nhinting at the mysteries that lie beyond.",
		help = "office - go to office\nstorage - go to storage\noperating room - go to operating room\npadded room - go to padded room\nbasement - go to basement\nexit - go to exit",
		exit = "dead",
		office = "office",
		storage = "storage",
		["operating room"] = "operating_room",
		["padded room"] = "padded_room",
		basement = "basement"
	},
	office = {
		description = "Entering the office, you spot an upset chair and a sturdy table with an obsolete computer.\nPapers are scattered about, adding to the disorder of the room.",
		help = "hallway - go to hallway\ndesk - search desk",
		hallway = "hallway",
		deskItem = "a key",
		deskItemTaken = 0
	},
	storage = {
		description = "As you approach the storage room, you hear rattling noises that abruptly stop as you open the door.\nInside, you see mannequins scattered across the floor, with one still twitching slightly.\nThe walls are lined with medical equipment, some of it still operational, adding to the eerie atmosphere.",
		help = "hallway - go to hallway\nmannequin - touch mannequin\nequipment - search equipment",
		hallway = "hallway",
		mannequin = "dead",
		equipmentItem = "a note - use 'read note' to read.",
		equipmentItemTaken = 0
	},
	operating_room = {
		description = "Upon opening the door to the operating room, you're immediately assaulted by screams of anguish echoing from the past.\nThe room's center holds an ominous operating table, sharp tools scattered on the floor coated in a thick layer of blood.\nAlong the walls, medical equipment stands as silent witnesses to the room's grim history.",
		help = "hallway - go to hallway\noperating table - take a nap on the operating table\ntools - pick up tools",
		hallway = "hallway",
		["operating_table"] = "dead",
		toolsItem = "sharp tools",
		toolsItemTaken = 0
	},
	padded_room = {
		description = "Upon opening the door to the padded room, you're met with a chilling sight: the skeletal remains of a former patient.\nThe skull's hollow sockets seem to follow your every move, casting an eerie gaze regardless of your position.",
		help = "hallway - go to hallway\nexplore - explore the room\nf - f to pay respects",
		hallway = "hallway",
		fItem = "a forgotten diary - use 'give' to give",
		fItemTaken = 0,
		exploreItem = "a pair of handcuffs",
		exploreItemTaken = 0
	},
	basement = {
		description = "Descending the stairs into the basement, echoes of past patients' screams fill the air, sending chills down your spine.\nUpon reaching the bottom, you discover empty shelves lining the walls and a solitary breaker box standing in the corner.",
		help = "hallway - go to hallway\nbreakers - turn on all the breakers",
		hallway = "hallway",
		breakersAction = "You flip the breakers, and the lights flicker to life, illuminating the darkened halls of the asylum as they cast eerie\n shadows across the walls.",
		breakersActionDone = 0
	}
}
local adventureState = defaultAdventureState
local adventureRooms = defaultAdventureRooms
local adventureGameAlive = 1
local adventureAction = ""
local adventureCurrentRoom = adventureRooms[adventureState.currentRoom]
local adventureInput = Textbox:new(0, 385, 585, 15, "") adventureInput:onTextChanged(function() adventureInput:text(string.lower(adventureInput:text())) end)
local adventureText = Textbox:new(0, 15, 600, 370, adventureCurrentRoom.description)
local adventureSubmit = Button:new(584, 385, 16, 15, "")
local adventureClear = Button:new(0, 0, 40, 16, "Clear")adventureClear:action( function() adventureText:text("") end)
adventureSubmit:action(function()
	adventureAction = adventureInput:text()
	adventureText:text(adventureText:text().."\n\n"..adventureAction)
	--adventureInput:text("")
	if adventureAction == "help" then
		adventureSend(adventureCurrentRoom.help)
	elseif adventureAction == "inventory" or adventureAction == "inv" then
		local temporaryItems = ""
		for _, item in ipairs(adventureState.inventory) do
			temporaryItems = temporaryItems.."\n"..item
		end
		adventureSend("You have:\n"..temporaryItems)
	elseif adventureAction == "read note" and adventureRooms.storage.equipmentItemTaken == 1 then
		adventureSend("The note reads 'diary, light.'")
	elseif adventureAction == "give" and adventureState.currentRoom == "storage" and valueExists(adventureState.inventory, "a forgotten diary - use 'give' to give") and adventureRooms.basement.breakersActionDone == 1 then
		adventureSend("The mannequins begin to rattle, and in a haunting chorus, they whisper, 'Thank you...' The exit door unlocks.")
		adventureRooms.hallway.exit = "win"
	else
		adventureRoom() 
	end 
end)
adventureText:readonly(true)
function adventureSend (a)
	adventureText:text(adventureText:text().."\n\n"..a)
end
function adventureRoom()
	local direction = adventureInput:text()
	adventureInput:text("")
	if adventureCurrentRoom[direction] then
		if adventureCurrentRoom[direction] == "dead" then
			s("stop")
			s(64, 1)
			adventureText:text("")
			--graphics.fillRect(0, 0, 999, 999, 0, 0, 0, 255)
			adventureState = defaultAdventureState
			adventureRooms = defaultAdventureRooms

			adventureCurrentRoom = adventureRooms[adventureState.currentRoom]
			adventureGameAlive = 0
			adventureText:text(adventureCurrentRoom.description)
		elseif adventureCurrentRoom[direction] == "win" then
			adventureText:text("")
			adventureSend("You won.\nThank you for playing my very spooky game.\n\naaccbb80, 2024")
		else
			adventureState.currentRoom = adventureCurrentRoom[direction]
			adventureCurrentRoom = adventureRooms[adventureState.currentRoom]
			adventureSend(adventureCurrentRoom.description)
		end
	elseif adventureCurrentRoom[direction.."Item"] then
		if adventureCurrentRoom[direction.."ItemTaken"] == 1 then
			adventureSend("Nothing found.")
		else
			adventureCollect(adventureCurrentRoom[direction.."Item"])
			adventureCurrentRoom[direction.."ItemTaken"] = 1
		end
	elseif adventureCurrentRoom[direction.."Action"] then
		if adventureCurrentRoom[direction.."ActionDone"] == 0 then
			adventureSend(adventureCurrentRoom[direction.."Action"])
			adventureCurrentRoom[direction.."ActionDone"] = 1
		end
	else
		adventureSend("No such command!")
	end
end

function adventureCollect (a)
	table.insert(adventureState.inventory, a)
	adventureText:text(adventureText:text().."\n\n".."You collected "..a..".")
end
local deathTimer = 0
adventureGame:onDraw (
	function()
		if adventureGameAlive == 1 then
			s(65, 1)
			deathTimer = 0
		else
			deathTimer = deathTimer +1
			if deathTimer > 250 then
				adventureGameAlive = 1
			else
				graphics.fillRect(0, 0, 999, 999, math.floor(125-(deathTimer/2)), 0, 0, 255)
				graphics.fillRect(math.random(1, 900), math.random(1, 600), math.random(1, 300), math.random(1, 300), math.floor(150-(deathTimer/2)), 0, 0, 255)
				for randomVariableThatIsCompletelyUseless=0, 5 do
					graphics.fillRect(0, math.random(1, 600), 999, math.random(1, 25),math.random(1, 255), math.random(1, 255), math.random(1, 255),  math.floor(125-(deathTimer/2)))
				end
			end
		end
	end	
)

function loadFile (a)
	if a then
		--[[save = loadstring('fileNameList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsName"), "�", "\",\"")..'"}')
		save()
		save = loadstring('filesList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsData"), "�", "\",\"")..'"}')
		save()
		local key = indexOf(fileNameList,a)
		if key then
			textBoxApp:text(filesList[key])
		else
			s(3)
			interface.beginThrowError("No such file named '"..a.."'!")
		end]]
		if fs.exists("./powderOS/"..a) then
			local file = io.open("./powderOS/"..a, "rb")
			local tmp = file:read()
			file:close()
			return tmp
		else
			s(3)
			interface.beginThrowError("No such file named '"..a.."'!")
		end
	end
end

local explorerAppDel = Button:new(0, 0, 17, 16, "", "PowderOS") --  is a powder icon
explorerAppDel:action(
	function(sender)
		s(4)
		interface.beginInput("Delete file", "Which file would you like to delete?", "", "fileName.txt", function(a) s(4) pendingDeletion = a interface.beginConfirm('Delete file', "Are you sure you want to delete this file? It will be lost forever! (a very long time!)", 'Confirm', delFile) end)
	end
)

function delFile(a)
	if a then
	--[[save = loadstring('fileNameList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsName"), "�", "\",\"")..'"}')
	save()
	save = loadstring('filesList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsData"), "�", "\",\"")..'"}')
	save()
	local key = indexOf(fileNameList,pendingDeletion)
		if key then
			fileNameList[key] = nil
			filesList[key] = nil
			local nameListOut = ""
			local fileListOut = ""
			for i=1,#fileNameList do
				fileListOut = fileListOut..filesList[i].."�"
				nameListOut = nameListOut..fileNameList[i].."�"
			end
			fileListOut = fileListOut:sub(1, -4)
			nameListOut = nameListOut:sub(1, -4)
			MANAGER.savesetting("powderOS","fsName",nameListOut) -- newfile = �
			MANAGER.savesetting("powderOS","fsData",fileListOut)
			s(10)
			openExplorerApp(1)
		else
			s(3)
			interface.beginThrowError("No such file named '"..pendingDeletion.."'!")
		end]]
		if fs.exists("./powderOS/"..pendingDeletion) then
			os.remove("./powderOS/"..pendingDeletion)
			s(10)
			openExplorerApp(1)
		else
			s(3)
			interface.beginThrowError("No such file named '"..pendingDeletion.."'!")
		end
	end
end

local explorerAppRename = Button:new(16, 0, 17, 16, "") --  is a powder icon
explorerAppRename:action(
	function(sender)
		s(4)
		interface.beginInput("Rename file", "Which file would you like to rename?", "", "fileName.txt", function(a) if fs.exists("./powderOS/"..a) then s(4) pendingRename = a interface.beginInput('Rename file', "What do you want to rename '"..a.."' to?", "", "fileName.txt", renameFile) else s(3) interface.beginThrowError("No such file named '"..a.."'!") end end)
	end
)


function renameFile(a)
	if a then
		--[[if string.find(MANAGER.getsetting("powderOS", "fsName"), a) then
			s(3)
			interface.beginThrowError("'"..a.."' already exists!")
		else
			save = loadstring('fileNameList = {"'..string.gsub(MANAGER.getsetting("powderOS", "fsName"), "�", "\",\"")..'"}')
			save()
			local key = indexOf(fileNameList,pendingRename)
			if key then
				fileNameList[key] = a
				local nameListOut = ""
				for i=1,#fileNameList do
					nameListOut = nameListOut..fileNameList[i].."�"
				end
				nameListOut:sub(1, -4)
				MANAGER.savesetting("powderOS","fsName",nameListOut) -- newfile = �
				openExplorerApp(1)
			else
				s(3)
				interface.beginThrowError("No such file named '"..a.."'!")
			end
		end]]
		if fs.exists("./powderOS/"..a) then
			s(3)
			interface.beginThrowError("'"..a.."' already exists!")
		else
			fs.move("./powderOS/"..pendingRename, "./powderOS/"..a)
			openExplorerApp(1)
		end
		
	end
end

local exitOS = Button:new(0, 370, 90, 15, " Return To TPT", "") --  is an 'x' icon
exitOS:action(
	function(sender)
		interface.closeWindow(mainApp)
	end
)

--[[exitAllApps = Button:new(535, 0, 16, 16, "", "") --  is an x icon
exitAllApps:action(
	function(sender)
		local loopValue = #appWindow
		for i=1,loopValue do
			local exit = loadstring("interface.closeWindow("..appWindow[i]..")")
			exit()
		end
	end
)]]

local exitTPT = Button:new(0, 342, 90, 15, "\x0F\xFF\x66\x66 Quit TPT", "") --  is a power icon
exitTPT:action(
	function(sender)
		s(6)
		local quitMessages = {"*slaps " .. tpt.get_name() .. " with a sack of moldy potatoes*", "Get outta here and go back to your boring programs.", "Please don't leave, there's more cities to bomb!", "I wouldn't leave if I were you. Work is much worse.", "You're trying to say you like TV better than me, right?", "Go ahead and leave. See if I care.", "Are you sure you want to quit this great game?", "Don't leave yet -- scary mutant spiders will come after you!"}
		randMessage = quitMessages[math.random(#quitMessages)]
		interface.beginConfirm('You are about to quit', randMessage, 'Confirm', exitPowderToy)
	end
)

local restartTPT = Button:new(0, 356, 90, 15, "\x0F\xFF\xFF\x66 Restart TPT", "") --  is a power icon
restartTPT:action(
	function(sender)
		s(4)
		interface.beginConfirm('You are about to restart', "Are you sure you want to restart the game? All unsaved data will be lost!", 'Confirm', function(a) if a then plat.restart() end end)
	end
)

local runFunc = Button:new(0, 328, 90, 15, "\x0F\x88\xAA\xFF Run", "") --  is a power icon
runFunc:action(
	function(sender)
		s(4)
		interface.beginInput("Run function", "Type in the name of a global function you'd like to run.", "", "testFunction", function(a) local run = loadstring('if pcall('..a..') then else interface.beginThrowError("No such function!") end') run() end)
	end
)

local updateOS = Button:new(0, 314, 90, 15, "\x0F\x88\xFF\x88 Update", "") --  is a power icon
updateOS:action(
	function(sender)
		interface.beginMessageBox("Not implemented", "Coming next update.")
		--tpt.getscript(???, "./scripts/downloaded/??? aaccbb-powderOS.lua", 1, 0)
	end
)
local aboutOS = Button:new(0, 300, 90, 15, "\x0F\xFF\xFF\x66 About", "") --  is a power icon
aboutOS:action(
	function(sender)
		interface.beginMessageBox("About", "powderOS v"..powderOSVersion.."\n\nv"..powderOSVersion.." Completed "..powderOSBuildReleaseDate..".\n\n'Licensed' to:\n"..tpt.get_name().."\n\nCreated by aaccbb, April 7th, 2024", 1)
	end
)

function exitPowderToy (a)
	if a then
		os.exit()
	end
end

local startButton = Button:new(0, 384, 45, 16, "\x0F\xFF\xFD\x4F Start", "")
startButton:action(
	function(sender)
		local s = not exitOS:visible()
		exitOS:visible(s)
		exitTPT:visible(s)
		restartTPT:visible(s)
		runFunc:visible(s)
		updateOS:visible(s)
		aboutOS:visible(s)
	end
)

--[[local explorerButton = Button:new(16, buttonY, 50, 30, "\nExplorer", "") --  is a folder icon
explorerButton:action(
	function(sender)
		interface.showWindow(explorerApp)
	end
)

buttonY = buttonY + 44

local textButton = Button:new(16, buttonY, 60, 30, "\nText Editor", "") --  is a folder icon
textButton:action(
	function(sender)
		interface.showWindow(textApp)
	end
)

buttonY = buttonY + 44
]]
local powderos = Button:new(0, 1, 17, 16, "", "PowderOS") --  is a powder icon
powderos:action(
	function(sender)
		--s(4)
		graphics.fillRect(0, 0,9999,9999, 0, 0, 0, 255)
		--function passwordCheck(try)
		--if MANAGER.getsetting("powderOS", "password") == "" then passwordCheck(2) else passwordCheck(1) end
		--	if try == 1 then
		--		s(3)
		--		--interface.beginThrowError("Wrong password! "..MANAGER.getsetting("powderOS", "password"))
		--	elseif try == 2 then
		s(8-((startupSound-1)*6))
		interface.showWindow(mainApp)
		exitOS:visible(false)
		exitTPT:visible(false)
		restartTPT:visible(false)
		runFunc:visible(false)
		updateOS:visible(false)
		aboutOS:visible(false)
		--	end
		--	if try == 1 or try == 0 then
		--		interface.beginInput("Log in", "Please enter your password", "", "Password", function(a) if a ~= MANAGER.getsetting("powderOS", "password") then passwordCheck(1) else passwordCheck(2) end end)
		--	end
		--end
		

	end
)
local battleShipCheckBoxCounter = 0
local battleShipAimCheckBoxCounter = 0
local customCheckbox = {}
local battleShipGameStart = 0
local battleShipName = ""
local battleShipServer = ""
local battleShipServerHost = 0
--local battleShipSendValues = ""
function registerCheckboxes()
	local cntr = 0
	for xm=1, 10 do
		for ym=2, 11 do
			cntr = cntr+1
			customCheckbox[cntr] = interface.checkbox(xm*11, ym*11, 11, 11, "")
			customCheckbox[cntr]:action(function(sender, checked)
				if checked == true then
					if battleShipCheckBoxCounter >= 17 or battleShipGameStart == 1 then
						sender:checked(false)
					else
						battleShipCheckBoxCounter = battleShipCheckBoxCounter + 1
					end
				elseif checked == false then
					if battleShipGameStart == 1 then
						sender:checked(true)
					else
						battleShipCheckBoxCounter = battleShipCheckBoxCounter - 1
					end
				end
			end
			)
			battleApp:addComponent(customCheckbox[cntr])
		end
	end
end

local customAimCheckbox = {}
function registerAimCheckboxes()
	local cntr = 0
	for xm=1, 10 do
		for ym=2, 11 do
			cntr = cntr+1
			customAimCheckbox[cntr] = interface.checkbox((xm*11)+120, ym*11, 11, 11, "")
			customAimCheckbox[cntr]:action(function(sender, checked)
				if checked == true then
					if battleShipAimCheckBoxCounter == 1 then
						sender:checked(false)
					else
						battleShipAimCheckBoxCounter = battleShipAimCheckBoxCounter + 1
					end
				elseif checked == false then
					battleShipAimCheckBoxCounter = battleShipAimCheckBoxCounter - 1
				end
			end
			)
			battleApp:addComponent(customAimCheckbox[cntr])
		end
	end
end

function battleShipConvert ()
	local battleShipSendValues = ""
	for loop=1, 100 do
		battleShipSendValues = battleShipSendValues..b2n(customAimCheckbox[loop]:checked())
	end
	return battleShipSendValues
end

local battleShipBegin = interface.button(0, 0, 60, 16, "Start Game")
battleShipBegin:action(function()
	if battleShipCheckBoxCounter ~= 17 then
		interface.beginThrowError("Place all of your ships!")
	elseif battleShipAimCheckBoxCounter ~= 1 then
		interface.beginThrowError("Select a location to attack!")
	elseif battleShipServer == "" then
		interface.beginThrowError("Please choose a server!")
	elseif battleShipName == "" then
		interface.beginThrowError("Please choose a username!")
	else
		battleShipGameStart = 1
		local fetch = http.post("https://script.tiny-warthog-19.telebit.io/powderOS/battleship/index.php", {
		["s"] = battleShipServer,
		["p"] = battleShipServerHost,
		["u"] = battleShipName,
		["d"] = battleShipConvert()
		})
		--interface.closeWindow(chatwindow)
		while fetch:status() == "running" do
		end
		chat, tmp = fetch:finish()
		if (tmp ~= 200) then
			interface.beginThrowError("Cannot connect to Battleship server! Is it offline?")
		else
			interface.beginMessageBox("Server", "Server successfully started! Invite another player to play.")
		end
	end
end)

local battleShipSet = interface.button(59, 0, 73, 16, "Change Server")
battleShipSet:action(function()
	interface.beginInput("Server", "Enter a server name.", "", "acbServer", function(a) battleShipServer = a end)
	interface.beginInput("Username", "Enter a username name.", "", "aaccbb", function(a) battleShipName = a end)
	interface.beginConfirm("Host", "Are you the host?", "Yes", function(a) battleShipServerHost = b2n(a) end) -- 0 is second player, 1 is host
end)

registerCheckboxes()
registerAimCheckboxes()

function reloadCustomApps()
	local loopValue = #appName
	local buttonY = 16
	local buttonX = 16
	local customButton = {}
	local exit = {}
	for i=1,loopValue do
		if buttonY == (7*40+16) then
			buttonY = 16
			buttonX = buttonX + 100
		end
		customButton[i] = Button:new(buttonX, buttonY, appX[i], 30, appIcon[i].."\x0F\xFF\xFF\xFF\n"..appName[i], "") --  is a star icon
		customButton[i]:action(
			function(sender)
				load(appFunction[i])
			end
		)
		mainApp:addComponent(customButton[i])
		exit = loadstring('exitWindow'..i..' = Button:new(584, 0, 16, 16, "\\x0F\\xFF\\x00\\x00", "") \
		exitWindow'..i..':action( \
			function(sender) \
				interface.closeWindow('..appWindow[i]..') \
				s("stop") \
			end \
		) \
		'..appWindow[i]..':addComponent(exitWindow'..i..')')
		exit()
-- removed because annoying af		exeqt = loadstring('moveWindow'..i..' = Button:new(0, 0, 585, 16, "'..appIcon[i]..' \\x0F\\xFF\\xFF\\xFF'..appName[i]..string.rep(" ", 103)..'", "")\
-- removed because annoying af		activateMove'..i..' = false\
-- removed because annoying af		moveWindow'..i..':action( \
-- removed because annoying af			function(sender) \
-- removed because annoying af				activateMove'..i..' = not activateMove'..i..'\
-- removed because annoying af			end \
-- removed because annoying af		) \
-- removed because annoying af		'..appWindow[i]..':addComponent(moveWindow'..i..')\
-- removed because annoying af		'..appWindow[i]..':onMouseMove(\
-- removed because annoying af		function(mX, mY, dX, dY)\
-- removed because annoying af			if (activateMove'..i..' == true) then\
-- removed because annoying af				'..appWindow[i]..':position(mX-250, mY-8)\
-- removed because annoying af			end\
-- removed because annoying af		end\
-- removed because annoying af		)')
-- removed because annoying af		exeqt()
		buttonY = buttonY + 40
	end
end
reloadCustomApps()
mainApp:onTick(
	function()
		timeLabel:text(os.date("%X   %x"))
		
	end	
)
mainApp:onDraw(
	function()
		graphics.fillRect(15, 13, 598, 383, bgC[1], bgC[2], bgC[3], 255)
		graphics.fillRect(15, 396, 598, 15, 128, 128, 128, 255)
		graphics.drawText(24, 20, string.rep("                                                              \n\n", 16), 255, 255, 255, 32)
		graphics.drawText(23, 19, string.rep("                                                              \n\n", 16), 0, 0, 0, 32)
		
	end	
)
local count = 1
webApp:onDraw(
	function()
		if (renderLength*renderWidth < count) then
			count = 1
		end
		for xDraw=1,renderWidth do
			for yDraw=1,renderLength do
				graphics.fillRect(17+yDraw, 30+xDraw,1,1, math.min(renderR[(count+(592*scrollAmount))], 255), math.min(renderG[(count+(592*scrollAmount))], 255), math.min(renderB[(count+(592*scrollAmount))], 255), 255)
				count = count+1
			end
		end
	end		
)

local paintCount = 1
local paintAppMouseState = 0
local paintSize = 1
paintApp:onDraw(
	function()
		if (renderLength*renderWidth < paintCount) then
			paintCount = 1
		end
		for pxDraw=1,renderWidth do
			for pyDraw=1,renderLength do
				graphics.fillRect(17+pyDraw, 30+pxDraw,1,1, paintRender[paintCount], paintRender[paintCount], paintRender[paintCount], 255)
				paintCount = paintCount+1
			end
		end
	end		
)
local paintColor = 0
paintApp:onMouseDown(
	function(x, y, b)
		if b == 1 then
			paintAppMouseState = 1
		elseif b == 3 then
			interface.beginInput("Color", "Pick a color between 0 and 255", "", "128", function(a) paintColor = tonumber(math.max(0, math.min(255, a))) end)
			interface.beginInput("Size", "Pick a size between 1 and 100", "", "50", function(a) paintSize = tonumber(math.max(1, math.min(100, a))) end)
		end
	end		
)
paintApp:onMouseUp(
	function(x, y, b)
		if b == 1 then
			paintAppMouseState = 0
		end
	end		
)
paintApp:onMouseMove(
	function(x, y)
		local mvx = x-17
		local mvy = y-30
		if paintAppMouseState == 1 then
			for lpvly=0, paintSize do
				for lpvlx=0, paintSize do
					paintRender[((mvx+lpvlx)+(mvy+lpvly)*592)] = paintColor
				end
			end
		end
	end		
)
local paintAppNew = Button:new(0, 0, 17, 16, "")
paintAppNew:action(
	function(sender)
		s(4)
		interface.beginConfirm('New file', "Are you sure you want to create a new file? This will erase your previous file if unsaved.", 'Confirm', function(a) s(10) if a then paintRender = rld({"255|222592"}) end end)
	end
)
local paintAppSave = Button:new(16, 0, 17, 16, "")
paintAppSave:action(
	function(sender)
		pendingSaveData = "\"0\","..pea(rle(paintRender))
		s(4)
		interface.beginInput("Save file", "What would you like to name your file?", "", "fileName.tpt", saveFile)
	end
)

local paintAppLoad = Button:new(32, 0, 17, 16, "")
paintAppLoad:action(
	function(sender)
		s(4)
		interface.beginInput("Open file", "What file would you like to open?", "", "fileName.tpt", function(a) paintRender = rld(str2list(loadFile(a))) end)
	end
)

--Register Components (well, most of them)

interface.addComponent(powderos)

mainApp:addComponent(exitOS)
mainApp:addComponent(exitTPT)
mainApp:addComponent(timeLabel)
mainApp:addComponent(restartTPT)
mainApp:addComponent(runFunc)
mainApp:addComponent(startButton)
mainApp:addComponent(updateOS)
mainApp:addComponent(aboutOS)

textApp:addComponent(textBoxApp)
textApp:addComponent(textAppNew)
textApp:addComponent(textAppSave)
textApp:addComponent(textAppLoad)

explorerApp:addComponent(explorerText)
explorerApp:addComponent(explorerAppDel)
explorerApp:addComponent(explorerAppRename)

paintApp:addComponent(paintAppNew)
paintApp:addComponent(paintAppLoad)
paintApp:addComponent(paintAppSave)

webApp:addComponent(webSearch)
webApp:addComponent(webGo)
webApp:addComponent(webScrollBar)

adventureGame:addComponent(adventureText)
adventureGame:addComponent(adventureInput)
adventureGame:addComponent(adventureSubmit)
adventureGame:addComponent(adventureClear)

composerApp:addComponent(composerAppView)
composerApp:addComponent(composerAppExit)
composerApp:addComponent(composerAppSave)
composerApp:addComponent(composerAppDur)
composerApp:addComponent(composerAppAdd)
composerApp:addComponent(composerAppUp)
composerApp:addComponent(composerAppDown)
composerApp:addComponent(composerAppNote)
composerApp:addComponent(composerAppDel)

musicApp:addComponent(musicAppComposer)
musicApp:addComponent(musicAppLoad)
musicApp:addComponent(musicAppPlaying)
musicApp:addComponent(musicAppDuration)
musicApp:addComponent(musicAppTime)

terminalApp:addComponent(terminalText)
terminalApp:addComponent(terminalInput)
terminalApp:addComponent(terminalSubmit)
terminalApp:addComponent(terminalClear)

battleApp:addComponent(battleShipBegin)
battleApp:addComponent(battleShipSet)

--event.register(event.tick, timeDate)

-- event.register(event.tick, drawBackground) -- Coming Soon!

-- saves = fs.list("./Saves")
